{"version":3,"sources":["webpack:///./src/pages/index/index.less","webpack:///./src/pages/constant.ts","webpack:///./src/pages/index/index.tsx","webpack:///./src/assets/img/compress_cute.jpeg","webpack:///./src/assets/img/cute.jpeg"],"names":["module","exports","FeatureName","FeatureList","target","Article","img","CompressCute","previewImg","Cute","title","author","time","description","lastUpdateTime","tag","name","color","Gpt3","icon","Todo","DEFAULT_EXPANDED_KEYS","handleGotoFeature","featureName","memoizeFn","history","resolver","Index","data","action","headers","onChange","info","file","status","console","log","fileList","className","style","card","index","onClick","memo"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,MAAQ,gBAAgB,iCAAmC,2CAA2C,+BAAiC,yCAAyC,qBAAuB,+B,0HCI7MC,E,kDAAAA,K,iBAAAA,E,qBAAAA,E,eAAAA,E,iBAAAA,M,KAwBL,IAAMC,EAA6B,CAkBtC,CACIC,OAAQF,EAAYG,QACpBC,IAAKC,IACLC,WAAYC,IACZC,MAAO,UACPC,OAAQ,QACRC,KAAM,6BACNC,YAAa,2BAEbC,eAAgB,6BAChBC,IAAK,CACD,CACIC,KAAM,UACNC,MAAO,aAKnB,CACIb,OAAQF,EAAYgB,KACpBZ,IAAKC,IACLC,WAAYC,IACZC,MAAO,OACPC,OAAQ,QACRC,KAAM,mCACNC,YAAa,YACbE,IAAK,CACD,CACIC,KAAM,UACNG,KAAM,iBACNF,MAAO,WAEX,CACID,KAAM,WACNG,KAAM,QACNF,MAAO,WAEX,CACID,KAAM,OACNG,KAAM,cACNF,MAAO,aAInB,CACIb,OAAQF,EAAYkB,KACpBd,IAAKC,IACLC,WAAYC,IACZC,MAAO,OACPC,OAAQ,QACRC,KAAM,6BACNC,YAAa,qEACbE,IAAK,CACD,CACIC,KAAM,OACNG,KAAM,OACNF,MAAO,cAMVI,EAAwB,CACjC,SACA,cACA,kBACA,SACA,U,4LCtGJ,SAASC,EAAkBC,GACvB,OAAOC,SACH,KACIC,UAAA,mBAAyBF,GAAzB,GAEJ,CACIG,SAAUH,GAGrB,CAED,SAASI,IACL,IAAMC,EAAO,CACTZ,KAAM,QACNa,OAAQ,mCACRC,QAAS,CAAC,EACVC,SAASC,GACoB,cAArBA,EAAKC,KAAKC,QACVC,QAAQC,IAAIJ,EAAKC,KAAMD,EAAKK,UAEP,SAArBL,EAAKC,KAAKC,OACV,4BAAmBF,EAAKC,KAAKjB,KAA7B,gCAC4B,UAArBgB,EAAKC,KAAKC,QACjB,0BAAiBF,EAAKC,KAAKjB,KAA3B,wBAEP,GAGL,OACI,iBAAKsB,UAAWC,UAAhB,UACKpC,UAAgB,CAACqC,EAAMC,KACpB,IACI1B,EASAyB,EATAzB,IACAT,EAQAkC,EARAlC,IACAM,EAOA4B,EAPA5B,KACAF,EAMA8B,EANA9B,MACAC,EAKA6B,EALA7B,OACAP,EAIAoC,EAJApC,OACAI,EAGAgC,EAHAhC,WACAK,EAEA2B,EAFA3B,YACAC,EACA0B,EADA1B,eAGJ,OACI,SAAC,KAAD,CAEIC,IAAKA,EACLT,IAAKA,EACLM,KAAMA,EACNF,MAAOA,EACPC,OAAQA,EACRH,WAAYA,EACZK,YAAaA,EACbC,eAAgBA,EAChB4B,QAASpB,EAAkBlB,IAV/B,UACYqC,EADZ,YACqB7B,GAFzB,KAgBJ,gCAAYgB,GAAZ,cACI,eAAQT,MAAM,SAAC,IAAD,IAAd,kCAIf,CAED,cAAewB,UAAKhB,E,wBC9EpB3B,EAAOC,QAAU,IAA0B,oC,wBCA3CD,EAAOC,QAAU,IAA0B,2B","file":"p__index.a1999e23.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"index\":\"index___1CeBI\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___zMV4R\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___2NkYM\",\"textOverflowEllipsis\":\"textOverflowEllipsis___2Q0TE\"};","import { IconProp } from '@fortawesome/fontawesome-svg-core'\n\nimport Cute from '@/assets/img/cute.jpeg'\nimport CompressCute from '@/assets/img/compress_cute.jpeg'\n\nexport enum FeatureName {\n    Three = 'three',\n    Article = 'article',\n    Gpt3 = 'gpt3',\n    Todo = 'todo',\n}\n\ntype FeatureType = {\n    target: FeatureName\n    img?: string\n    previewImg?: string\n    title?: string\n    author?: string\n    time?: string\n    description?: string\n    lastUpdateTime?: string\n    tag?: {\n        name: string\n        key?: string\n        icon?: IconProp\n        color?: string\n    }[]\n}\n\nexport const FeatureList: FeatureType[] = [\n    // {\n    //     target: FeatureName.Three,\n    //     img: CompressCute,\n    //     previewImg: Cute,\n    //     title: 'Three',\n    //     author: 'Yomua',\n    //     time: '2023年08月22日',\n    //     description: 'Three.js',\n    //     tag: [\n    //         {\n    //             name: 'Three',\n    //             icon: 'cube',\n    //             color: '#ecb0c1',\n    //         },\n    //     ],\n    // },\n\n    {\n        target: FeatureName.Article,\n        img: CompressCute,\n        previewImg: Cute,\n        title: 'Article',\n        author: 'Yomua',\n        time: '2023年02月25日',\n        description: '个人笔记',\n        // lastUpdateTime: getCurrentDate(), // 每次页面刷新, 都会更新时间\n        lastUpdateTime: '2023年12月18日',\n        tag: [\n            {\n                name: 'Article',\n                color: '#ecb0c1',\n            },\n        ],\n    },\n\n    {\n        target: FeatureName.Gpt3,\n        img: CompressCute,\n        previewImg: Cute,\n        title: 'GPT3',\n        author: 'Yomua',\n        time: '2023年02月19日 23:22',\n        description: 'gpt3 chat',\n        tag: [\n            {\n                name: 'Open AI',\n                icon: 'earth-americas',\n                color: '#ecb0c1',\n            },\n            {\n                name: 'Chat Gpt',\n                icon: 'brain',\n                color: '#ecb0c1',\n            },\n            {\n                name: 'Gpt3',\n                icon: 'certificate',\n                color: '#ecb0c1',\n            },\n        ],\n    },\n    {\n        target: FeatureName.Todo,\n        img: CompressCute,\n        previewImg: Cute,\n        title: 'Todo',\n        author: 'Yomua',\n        time: '2023年02月18日',\n        description: '一个来自远古的待办事项',\n        tag: [\n            {\n                name: 'Todo',\n                icon: 'bars',\n                color: '#ecb0c1',\n            },\n        ],\n    },\n]\n\nexport const DEFAULT_EXPANDED_KEYS = [\n    '0_base',\n    '1_front_end',\n    '6_error_handler',\n    '8_test',\n    '9_tools',\n]\n","import { memo } from 'react'\nimport { history } from 'umi'\nimport { memoizeFn } from '~/packages/y-screw'\nimport { Button, message, Upload } from 'antd'\nimport { UploadOutlined } from '@ant-design/icons'\n\nimport { Card } from '@/component'\n\nimport { FeatureList } from '../constant'\n\nimport style from './index.less'\n\nfunction handleGotoFeature(featureName: string) {\n    return memoizeFn(\n        () => {\n            history.push(`/feature/${featureName}`)\n        },\n        {\n            resolver: featureName,\n        },\n    )\n}\n\nfunction Index() {\n    const data = {\n        name: 'image',\n        action: 'http://192.168.3.143:4000/upload',\n        headers: {},\n        onChange(info) {\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList)\n            }\n            if (info.file.status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully`)\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`)\n            }\n        },\n    }\n\n    return (\n        <div className={style.index}>\n            {FeatureList.map((card, index) => {\n                const {\n                    tag,\n                    img,\n                    time,\n                    title,\n                    author,\n                    target,\n                    previewImg,\n                    description,\n                    lastUpdateTime,\n                } = card\n\n                return (\n                    <Card\n                        key={`${index}-${time}`}\n                        tag={tag}\n                        img={img}\n                        time={time}\n                        title={title}\n                        author={author}\n                        previewImg={previewImg}\n                        description={description}\n                        lastUpdateTime={lastUpdateTime}\n                        onClick={handleGotoFeature(target)}\n                    />\n                )\n            })}\n\n            <Upload {...data}>\n                <Button icon={<UploadOutlined />}>Click to Upload</Button>\n            </Upload>\n        </div>\n    )\n}\n\nexport default memo(Index)\n","module.exports = __webpack_public_path__ + \"static/compress_cute.0fcc7a18.jpeg\";","module.exports = __webpack_public_path__ + \"static/cute.cb8bfbcc.jpeg\";"],"sourceRoot":""}