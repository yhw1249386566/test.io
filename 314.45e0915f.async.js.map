{"version":3,"sources":["webpack:///./src/base_component/direction/index.less","webpack:///./src/base_component/text/index.less","webpack:///./src/component/card/index.less","webpack:///./src/component/markdown/index.less","webpack:///./src/component/sidebar/index.less","webpack:///./packages/y-classnames/index.ts","webpack:///./packages/y-screw/debounce.ts","webpack:///./packages/y-hooks/src/useWindowEventListener/index.ts","webpack:///./src/base_component/text/index.tsx","webpack:///./src/base_component/direction/index.tsx","webpack:///./src/component/card/index.tsx","webpack:///./src/component/sidebar/index.tsx","webpack:///./src/component/markdown/index.tsx","webpack:///./src/contexts/theme.tsx","webpack:///./src/hooks/use_theme.ts","webpack:///./src/utils/constant.ts","webpack:///./src/utils/index.ts","webpack:///./src/utils/log.ts","webpack:///./src/utils/request.ts"],"names":["module","exports","classnames","classes","i","length","value","isString","isNumber","isArray","Array","Object","prototype","toString","call","isObject","push","v","key","Reflect","has","join","fn","delay","timer","clearTimeout","rest","args","slice","setTimeout","apply","this","DEFAULT_OPTIONS","useWindowEventListener","eventName","listenCallback","effect","options","useEffect","window","addEventListener","debounce","removeEventListener","Text","props","className","otherProps","theme","useTheme","textClassName","style","children","memo","Direction","mode","alignItems","justifyContent","gap","undefined","CustomCard","img","previewImg","time","description","title","author","tag","lastUpdateTime","cardProps","useState","visible","setVisible","handleClickImage","useCallback","event","stopPropagation","bordered","hoverable","src","preview","onClick","icon","maxHeight","map","index","name","color","invertColor","marginRight","maskClosable","onVisibleChange","vis","Sidebar","isShowSidebar","setIsShowSidebar","prevScrollPosition","useRef","document","documentElement","scrollTop","handleTop","preventDefault","currentLocation","slider","scrollTo","SCROLL_SPEED","isNaN","log","sub","type","message","requestAnimationFrame","target","Document","isDownScroll","current","Markdown","remarkPlugins","remarkGfm","rehypePlugins","rehypeRaw","ordered","headingTopOffset","source","ThemeContext","createContext","ThemeProvider","Provider","useContext","CONVERT_TYPE_MAP","string","number","Number","boolean","toLowerCase","null","bigInt","BigInt","symbol","Symbol","object","JSON","parse","error","array","function","eval","currentWorkingDir","process","cwd","ENV_KEY","Dotenv","path","getEnvValue","envKey","returnType","converter","Error","RouteName","RouteLink","LOCAL_STORAGE_NAME","EVENT_EMITTER_NAME","ARTICLE_SUFFIX_NAME","ARTICLE_DIR","ARTICLE_PICtURE","WRITE_ARTICLE_DIR","saveLocalStorage","data","localStorage","setItem","saveBatchLocalStorage","forEach","item","getLocalStorage","getItem","clearLocalStorage","removeItem","clearAllLocalStorage","clear","saveSessionStorage","sessionStorage","getSessionStorage","storage","Promise","resolve","colorValue","replace","str","substring","getDataType","r","createFileTree","dirData","parentPath","fileTree","entries","fullPath","subTree","minDelayTime","startTime","Date","now","endTime","get404Md","request","then","res","success","urlChange","url","go","state","history","replaceState","popStateEvent","PopStateEvent","dispatchEvent","LOG_COLOR_MAP","info","logo","trace","logoGroup","console","group","groupEnd","warn","interceptorsMap","response","interceptors","use","onFulfilled","onRejected","checkResponse","status","statusText","handleResponse","contentType","headers","get","newResponse","includes","json","text","handleResult","result","handleError","params","queryString","reset","Accept","keys","fetch","catch"],"mappings":"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","file":"314.45e0915f.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"row___1UdcL\",\"column\":\"column___3S6qx\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___2PnqU\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___20OLN\",\"textOverflowEllipsis\":\"textOverflowEllipsis___1u-a9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"text___eH7ih\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___15Z7m\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___1RylG\",\"textOverflowEllipsis\":\"textOverflowEllipsis___eiNMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-light\":\"card-light___wL7zL\",\"card-dark\":\"card-dark___33apU\",\"card\":\"card___1Aqfk\",\"image\":\"image___3g604\",\"content\":\"content___3lENv\",\"title\":\"title___2Bzk-\",\"description\":\"description___2ORSX\",\"info\":\"info___2_m7q\",\"author\":\"author___2emhg\",\"time\":\"time___YsVpW\",\"tags\":\"tags___hmLww\",\"tag\":\"tag____Lyfk\",\"preview\":\"preview___1DC83\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___1MBBn\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___shsM8\",\"textOverflowEllipsis\":\"textOverflowEllipsis___2KB4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdown\":\"markdown___3CFfF\",\"markNavbarBox\":\"markNavbarBox___2ojCW\",\"markNavbar\":\"markNavbar___3drcn\",\"markdownBodyBox\":\"markdownBodyBox___2SJQO\",\"markdownBody\":\"markdownBody___1GIBf\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___3vgbL\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___2qoug\",\"textOverflowEllipsis\":\"textOverflowEllipsis___3lTmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar-light\":\"sidebar-light___ctrWB\",\"sidebar-dark\":\"sidebar-dark___1CwDu\",\"sidebar\":\"sidebar___2Jc5u\",\"sidebarHide\":\"sidebarHide___2pkhV\",\"goTop\":\"goTop___2L6MT\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___nCEGx\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___2BFqe\",\"textOverflowEllipsis\":\"textOverflowEllipsis___XwSfv\"};","type ClassNamesType =\n    | string\n    | number\n    | undefined\n    | Record<string, unknown>\n    | Array<ClassNamesType>\n\nconst classnames = (...args: ClassNamesType[]) => {\n    const classes: (string | number)[] = []\n\n    for (let i = 0; i < args.length; i++) {\n        const value = args[i]\n\n        const isString = typeof value === 'string'\n\n        const isNumber = typeof value === 'number'\n\n        const isArray =\n            Array.isArray(value) &&\n            Object.prototype.toString.call(value) === '[object Array]'\n\n        const isObject =\n            typeof value === 'object' &&\n            Object.prototype.toString.call(value) === '[object Object]'\n\n        if (isString || isNumber) {\n            classes.push(value)\n        } else if (isArray) {\n            const v = classnames(...value)\n            classes.push(v)\n        } else if (isObject) {\n            for (const key in value) {\n                if (Reflect.has(value, key) && value[key]) {\n                    classes.push(key)\n                }\n            }\n        }\n    }\n\n    return classes.join(' ')\n}\n\nexport default classnames\n","export default <T = () => void>(fn: T, delay: number) => {\n    let timer: NodeJS.Timeout\n\n    return function (...rest) {\n        if (timer) {\n            clearTimeout(timer)\n        }\n\n        const args = Array.prototype.slice.call(rest)\n\n        timer = setTimeout(() => {\n            if (typeof fn === 'function') {\n                fn.apply(this, args)\n            }\n        }, delay)\n    }\n}\n","import React, { useEffect } from 'react'\n\nimport { debounce } from '~/packages/y-screw'\n\nconst DEFAULT_OPTIONS = {\n    delay: 0,\n}\n\n// 此 hook 的监听器将被防抖\nexport default function useWindowEventListener(\n    eventName: string,\n    listenCallback: EventListenerOrEventListenerObject,\n    effect?: React.DependencyList,\n    options: {\n        delay?: number // 单位：毫秒\n    } = DEFAULT_OPTIONS,\n) {\n    if (!eventName) {\n        return\n    }\n\n    const { delay = 0 } = options\n\n    useEffect(() => {\n        window.addEventListener(eventName, debounce(listenCallback, delay))\n\n        return () => {\n            window.removeEventListener(\n                eventName,\n                debounce(listenCallback, delay),\n            )\n        }\n    }, effect)\n}\n","import React, { memo } from 'react'\n\nimport classnames from '~/packages/y-classnames'\n\nimport { useTheme } from '@/hooks'\n\nimport style from './index.less'\n\ntype Text = React.ClassAttributes<HTMLDivElement> &\n    React.HTMLAttributes<HTMLDivElement>\n\ninterface TextProps extends Text {\n    children?: React.ReactNode\n    className?: string\n}\n\nconst Text = (props: TextProps) => {\n    const { className = '', ...otherProps } = props\n\n    const theme = useTheme()\n\n    const textClassName = classnames(style.text, className, {\n        [style[`text-${theme}`]]: theme,\n    })\n\n    return (\n        <div className={textClassName} {...otherProps}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default memo(Text)\n","import React, { memo } from 'react'\n\nimport classnames from '~/packages/y-classnames'\n\nimport style from './index.less'\n\ntype Div = React.ClassAttributes<HTMLDivElement> &\n    React.HTMLAttributes<HTMLDivElement>\n\ninterface DirectionProps extends Div {\n    gap?: number\n    className?: string\n    mode?: 'row' | 'column'\n    children?: React.ReactNode\n    alignItems?: 'center' | 'space-between'\n    justifyContent?: 'center' | 'space-between'\n}\n\nconst Direction = (props: DirectionProps) => {\n    const {\n        children,\n        mode = 'row',\n        className = '',\n        alignItems,\n        justifyContent,\n        gap,\n        ...otherProps\n    } = props\n\n    return (\n        <div\n            className={classnames(style[mode], className)}\n            style={{\n                justifyContent,\n                alignItems,\n                gap: gap ? `${gap}px` : undefined,\n            }}\n            {...otherProps}>\n            {children}\n        </div>\n    )\n}\n\nexport default memo(Direction)\n","import { memo, useState, useCallback, useEffect } from 'react'\nimport { Tag, Card, Image, CardProps } from 'antd'\nimport { Scrollbars } from 'react-custom-scrollbars-2'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport classnames from '~/packages/y-classnames'\n\nimport { useTheme } from '@/hooks'\nimport { invertColor } from '@/utils'\n\nimport { Text } from '@/base_component'\n\nimport style from './index.less'\n\ninterface CustomProps extends CardProps {\n    img?: string\n    time?: string\n    title?: string\n    author?: string\n    previewImg?: string\n    description?: string\n    lastUpdateTime?: string\n    tag?: {\n        name: string\n        key?: string\n        color?: string\n        icon?: IconProp\n    }[]\n}\n\nconst CustomCard = (props: CustomProps) => {\n    const {\n        img,\n        previewImg,\n        time,\n        description,\n        title,\n        author,\n        className,\n        tag = [],\n        lastUpdateTime,\n        ...cardProps\n    } = props\n\n    const [visible, setVisible] = useState(false)\n\n    const theme = useTheme()\n\n    const handleClickImage = useCallback(\n        (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n            setVisible(true)\n            event.stopPropagation()\n        },\n        [],\n    )\n\n    return (\n        <div className={style.cardBox}>\n            <Card\n                bordered\n                hoverable\n                className={classnames(\n                    style.card,\n                    style[`card-${theme}`],\n                    className,\n                )}\n                {...cardProps}>\n                <Image\n                    src={img}\n                    className={style.image}\n                    preview={{ visible: false }}\n                    onClick={handleClickImage}\n                />\n\n                <div className={style.content}>\n                    <Text className={style.title}>{title}</Text>\n\n                    <Text className={style.description}>{description}</Text>\n\n                    <div className={style.info}>\n                        <div>\n                            <FontAwesomeIcon\n                                icon='user'\n                                className={style.author}\n                            />\n                            <Text>{author}</Text>\n                        </div>\n                        <div>\n                            <FontAwesomeIcon\n                                icon='clock'\n                                className={style.time}\n                            />\n                            <Text>{time}</Text>\n                        </div>\n                    </div>\n\n                    {lastUpdateTime && (\n                        <div className={style.info}>\n                            <div>\n                                <FontAwesomeIcon icon='clock' />\n                                <Text>最后更新时间: </Text>\n                            </div>\n                            <div>\n                                <Text>{lastUpdateTime}</Text>\n                            </div>\n                        </div>\n                    )}\n\n                    <Scrollbars style={{ maxHeight: 55 }}>\n                        <div className={style.tags}>\n                            {tag.map((tag, index) => {\n                                const { name, key, icon, color } = tag\n\n                                return (\n                                    <Tag\n                                        className={style.tag}\n                                        key={key ?? index}\n                                        color={\n                                            theme === 'light'\n                                                ? color\n                                                : invertColor(\n                                                      color ?? '#55acee',\n                                                  )\n                                        }\n                                        icon={\n                                            icon ? (\n                                                <FontAwesomeIcon\n                                                    icon={icon}\n                                                    style={{\n                                                        marginRight: '5px',\n                                                    }}\n                                                />\n                                            ) : null\n                                        }>\n                                        {name}\n                                    </Tag>\n                                )\n                            })}\n                        </div>\n                    </Scrollbars>\n                </div>\n            </Card>\n\n            <div className={style.preview}>\n                <Image.PreviewGroup\n                    preview={{\n                        visible,\n                        maskClosable: false,\n                        onVisibleChange: (vis) => setVisible(vis),\n                    }}>\n                    <Image src={previewImg} />\n                </Image.PreviewGroup>\n            </div>\n        </div>\n    )\n}\n\nexport default memo(CustomCard)\n","import { memo, useCallback, useState, useRef } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport classnames from '~/packages/y-classnames'\nimport { useWindowEventListener } from '~/packages/y-hooks'\n\nimport log from '@/utils/log'\nimport { useTheme } from '@/hooks'\nimport { SCROLL_SPEED } from '@/utils/constant'\n\nimport style from './index.less'\n\nfunction Sidebar() {\n    const [isShowSidebar, setIsShowSidebar] = useState(false)\n\n    const theme = useTheme()\n\n    const prevScrollPosition = useRef(document.documentElement.scrollTop)\n\n    const handleTop: React.MouseEventHandler<SVGSVGElement> = useCallback(\n        (event) => {\n            event.preventDefault()\n\n            let currentLocation = document.documentElement.scrollTop\n\n            function slider() {\n                if (currentLocation < 0) {\n                    window.scrollTo(0, 0)\n                    return\n                }\n\n                if (typeof SCROLL_SPEED !== 'number' || isNaN(SCROLL_SPEED)) {\n                    log.group('SCROLL_SPEED ERROR', {\n                        sub: [\n                            { type: 'info', message: SCROLL_SPEED },\n                            { type: 'trace', message: 'trace' },\n                        ],\n                    })\n                    window.scrollTo(0, 0)\n                    return\n                }\n\n                currentLocation -= SCROLL_SPEED\n                window.scrollTo(0, currentLocation)\n                window.requestAnimationFrame(slider)\n            }\n\n            slider()\n        },\n        [],\n    )\n\n    useWindowEventListener(\n        'scroll',\n        (event) => {\n            if (!(event.target instanceof Document)) {\n                return\n            }\n\n            const { scrollTop = 0 } = event?.target?.documentElement ?? {\n                scrollTop: 0,\n            }\n\n            // 往下滚动\n            const isDownScroll = scrollTop > prevScrollPosition.current\n\n            if (scrollTop === 0 || isDownScroll) {\n                setIsShowSidebar(false)\n                prevScrollPosition.current = scrollTop\n                return\n            }\n\n            // 此处相当于往上滚动, 则显示 sidebar\n            prevScrollPosition.current = scrollTop\n            setIsShowSidebar(true)\n        },\n        [],\n        { delay: 100 },\n    )\n\n    return (\n        <div\n            className={classnames(style.sidebar, style[`sidebar-${theme}`], {\n                [style.sidebarHide]: !isShowSidebar,\n            })}\n        >\n            <FontAwesomeIcon\n                icon='circle-chevron-up'\n                className={style.goTop}\n                onClick={handleTop}\n            />\n        </div>\n    )\n}\n\nexport default memo(Sidebar)\n","/* eslint-disable react/no-children-prop */\nimport { memo } from 'react'\nimport 'github-markdown-css'\nimport remarkGfm from 'remark-gfm'\nimport rehypeRaw from 'rehype-raw'\nimport MarkNavbar from 'markdown-navbar'\nimport ReactMarkdown from 'react-markdown'\n\nimport { useTheme } from '@/hooks'\nimport classnames from '~/packages/y-classnames'\n\nimport './base.css'\nimport './index.less'\nimport './markdown.css'\nimport style from './index.less'\n\ntype MarkdownProps = {\n    children: React.ReactNode | string\n    className?: string\n}\n\nconst Markdown = (props: MarkdownProps) => {\n    const { className = '', children } = props\n    const theme = useTheme()\n\n    return (\n        <div\n            className={classnames(\n                style.markdown,\n                style.increaseWeight,\n                {\n                    [`markdown-${theme}`]: theme,\n                },\n                className,\n            )}\n        >\n            <div\n                className={classnames(\n                    'markdown-body-box',\n                    style.markdownBodyBox,\n                )}\n            >\n                <ReactMarkdown\n                    // markdown-body 是导入 github-markdown-css\n                    className={classnames('markdown-body', style.markdownBody)}\n                    children={children as string}\n                    // 即使手动引入了 markdown.css 这两个也有用, 至少表格相关的样式需要。\n                    remarkPlugins={[remarkGfm]}\n                    // 这个不会影响到表格样式，但可能会影响其他样式，所以保留\n                    rehypePlugins={[rehypeRaw]}\n                />\n            </div>\n\n            <div\n                className={classnames(\n                    'markdown-navbar-box',\n                    style.markNavbarBox,\n                )}\n            >\n                <MarkNavbar\n                    className={style.markNavbar}\n                    ordered={false}\n                    headingTopOffset={40}\n                    source={children}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default memo(Markdown)\n","import React, { createContext } from 'react'\n\ninterface ThemeProviderProps {\n    theme: Theme\n    children: React.ReactNode\n}\n\nexport const ThemeContext = createContext('light')\n\nconst ThemeProvider = (props: ThemeProviderProps) => {\n    const { theme } = props\n\n    return (\n        <ThemeContext.Provider value={theme}>\n            {props.children}\n        </ThemeContext.Provider>\n    )\n}\n\nexport default ThemeProvider\n","import { useContext } from 'react'\n\nimport { ThemeContext } from '@/contexts'\n\nexport default function useTheme() {\n    return useContext(ThemeContext) as Theme\n}\n","import path from 'path'\nimport Dotenv from 'dotenv'\n\nimport log from './log'\nimport { EnvValueType, JSValueType } from './utils.d'\n\nexport const CONVERT_TYPE_MAP: Record<\n    JSValueType,\n    (value: string) => EnvValueType<JSValueType>\n> = {\n    string: (value) => value,\n    number: (value) => Number(value),\n    boolean: (value) => value.toLowerCase() === 'true',\n    null: () => null,\n    undefined: () => undefined,\n    bigInt: (value) => BigInt(value),\n    symbol: (value) => Symbol(value),\n    object: (value) => {\n        try {\n            return JSON.parse(value)\n        } catch (error) {\n            log.group('JSON.parse 失败', {\n                sub: [\n                    { type: 'error', message: error },\n                    {\n                        type: 'log',\n                        message: `要解析的值为: ${\n                            value === '' ? '空字符串' : value\n                        }`,\n                    },\n                ],\n            })\n            return null\n        }\n    },\n    array: (value) => {\n        try {\n            return JSON.parse(value)\n        } catch (error) {\n            log.group('JSON.parse 失败', {\n                sub: [\n                    { type: 'error', message: error },\n                    {\n                        type: 'log',\n                        message: `要解析的值为: ${\n                            value === '' ? '空字符串' : value\n                        }`,\n                    },\n                ],\n            })\n\n            return null\n        }\n    },\n    function: (value) => eval(`(${value})`),\n}\n\n// 这里的目的是因为: constants 存在打包之前就需要的 process.env 中的变量\n// 所以需要在这里提前注入环境变量\nconst currentWorkingDir = process.cwd()\nDotenv.config({ path: path.join(currentWorkingDir, '.env') })\n\n/** 以下不需要导出，用在此文件 */\n\nenum ENV_KEY {\n    SCROLL_SPEED = 'SCROLL_SPEED',\n    ARTICLE_DIR = 'ARTICLE_DIR',\n    WRITE_ARTICLE_DIR = 'WRITE_ARTICLE_DIR',\n    ARTICLE_PICtURE = 'ARTICLE_PICtURE',\n    ARTICLE_SUFFIX_NAME = 'ARTICLE_SUFFIX_NAME',\n}\n\nconst getEnvValue = <ReturnType extends JSValueType = 'string'>(\n    envKey: ENV_KEY,\n    options?: {\n        returnType?: ReturnType\n    },\n): EnvValueType<ReturnType> => {\n    if (envKey === undefined || envKey === null) {\n        return null as EnvValueType<ReturnType>\n    }\n\n    const { returnType = 'string' } = options ?? {}\n\n    const converter = CONVERT_TYPE_MAP[returnType]\n\n    if (!converter) {\n        throw new Error('类型不存在')\n    }\n\n    return converter(process.env[envKey] ?? '') as EnvValueType<ReturnType>\n}\n\n/** 以上不需要导出，用在此文件 */\n\nexport enum RouteName {\n    Index = '首页',\n    Type = '分类',\n    Mood = '心情',\n    About = '关于',\n}\n\nexport enum RouteLink {\n    Index = 'index',\n    Type = 'type',\n    Mood = 'mood',\n    About = 'about',\n}\n\nexport enum LOCAL_STORAGE_NAME {\n    SELECTED_ARTICLE_KEY = 'selectedArticleKey',\n    ARTICLE_FILE_PATH = 'activeFilePath',\n    ARTICLE_TREE_EXPANDED_KEYS = 'articleTreeExpandedKeys',\n    DATA_THEME = 'data-theme',\n    GPT3_CHAT_INFORMATION = 'gpt3_chat_information',\n}\n\n// 所有自定义事件名\nexport enum EVENT_EMITTER_NAME {\n    // 只有当视区内只显示文章时，此事件才会被监听和触发。\n    OPEN_ARTICLE_DIRECTORY = 'openArticleDirectoryOnlyArticle',\n    SHOW_HEADER_X = 'showHeaderX',\n}\n\n/************************* 以下都是 .env 中的变量值 *************************/\n\nexport const SCROLL_SPEED = getEnvValue(ENV_KEY.SCROLL_SPEED, {\n    returnType: 'number',\n})\n\n/** 以下变量即用于打包之前, 也用于打包后的运行时 */\n\nexport const ARTICLE_SUFFIX_NAME = getEnvValue(ENV_KEY.ARTICLE_SUFFIX_NAME)\n\n/** 以上变量即用于打包之前, 也用于打包后的运行时 */\n\n/** 以下变量用于打包之前的准备 */\n\nexport const ARTICLE_DIR = getEnvValue(ENV_KEY.ARTICLE_DIR)\n\nexport const ARTICLE_PICtURE = getEnvValue(ENV_KEY.ARTICLE_PICtURE)\n\nexport const WRITE_ARTICLE_DIR = getEnvValue(ENV_KEY.WRITE_ARTICLE_DIR)\n\n/** 以上变量用于打包之前的准备 */\n\n/************************* 以上都是 .env 中的变量值 *************************/\n","/* eslint-disable no-use-before-define */\n\nimport { EnvValueType, JSValueType } from './utils.d'\nimport { CONVERT_TYPE_MAP, LOCAL_STORAGE_NAME } from './constant'\nimport request from './request'\nimport log from './log'\n\n/** start --- 不需要导出 --- start */\n\ntype DirData = {\n    [fileName: string]: string | DirData\n}\n\ntype StorageDataKey<KeyType> = { key: KeyType; value: string }\n\nconst saveLocalStorage = (\n    data: StorageDataKey<LOCAL_STORAGE_NAME>,\n    // config?,\n) => {\n    const { key, value } = data\n\n    if (!key) {\n        log.error('saveLocalStorage key 不存在', key)\n        return false\n    }\n\n    localStorage.setItem(key, value)\n\n    return true\n}\n\nconst saveBatchLocalStorage = (data: StorageDataKey<LOCAL_STORAGE_NAME>[]) => {\n    data.forEach((item) => {\n        const { key, value } = item ?? {}\n\n        if (!key) {\n            log.error('saveBatchLocalStorage key 不存在: ', key)\n            return false\n        }\n\n        localStorage.setItem(key, value)\n    })\n\n    return true\n}\n\nconst getLocalStorage = <\n    ReturnType extends JSValueType = 'string',\n    DataType = string,\n>(\n    key: LOCAL_STORAGE_NAME,\n    options?: { returnType?: ReturnType },\n): EnvValueType<ReturnType, DataType> => {\n    if (!key) {\n        log.error('getLocalStorage: key 不存在')\n        return '' as EnvValueType<ReturnType, DataType>\n    }\n\n    const { returnType = 'string' } = options ?? {}\n\n    const converter = CONVERT_TYPE_MAP[returnType]\n\n    return converter(localStorage.getItem(key) ?? '') as EnvValueType<\n        ReturnType,\n        DataType\n    >\n}\n\nconst clearLocalStorage = (key: LOCAL_STORAGE_NAME) => {\n    if (!key) {\n        log.warn('clearLocalStorage: key 不存在')\n        return false\n    }\n\n    localStorage.removeItem(key)\n\n    return true\n}\n\nconst clearAllLocalStorage = () => {\n    localStorage.clear()\n    return true\n}\n\nconst saveSessionStorage = (\n    data: StorageDataKey<string>,\n    // config?,\n) => {\n    const { key, value } = data\n\n    if (!key) {\n        log.error('saveSessionStorage: key 不存在')\n        return\n    }\n\n    sessionStorage.setItem(key, value)\n}\n\nconst getSessionStorage = (key: string) => {\n    if (!key) {\n        log.error('getSessionStorage: key 不存在')\n        return ''\n    }\n\n    return sessionStorage.getItem(key) ?? ''\n}\n\n/** end --- 不需要导出 --- end */\n\nexport const storage = {\n    saveLocalStorage,\n    saveBatchLocalStorage,\n    getLocalStorage,\n    clearLocalStorage,\n    clearAllLocalStorage,\n    saveSessionStorage,\n    getSessionStorage,\n}\n\nexport const delay = async (time: number) =>\n    new Promise((resolve) => setTimeout(resolve, time))\n\nexport const invertColor = (color: string) => {\n    const colorValue: any = '0x' + color.replace(/#/g, '')\n    const str = '000000' + (0xffffff - colorValue).toString(16)\n    return '#' + str.substring(str.length - 6, str.length)\n}\n\nexport const getChatLengthFromString = (str: string) => {\n    let length = 0\n    for (let i = 0; i < str.length; i++) {\n        const charCode = str.charCodeAt(i)\n        if (charCode >= 0 && charCode <= 128) {\n            length += 1 // 英文字符长度为1\n        } else {\n            length += 2 // 中文字符长度为2\n        }\n    }\n    return length\n}\n\nexport const getDataType = <T>(data: T): JSValueType => {\n    const type = Object.prototype.toString\n        .call(data)\n        .replace(/\\[?\\]?/g, '') // 'object String'\n        .replace('object ', '') // String\n        .replace(/\\w/, (r) => r.toLowerCase()) as JSValueType // string\n\n    return type\n}\n\nexport const createFileTree = (\n    dirData: DirData,\n    options?: {\n        parentPath?: string\n    },\n) => {\n    if (getDataType(dirData) !== 'object') return []\n\n    const { parentPath = '' } = options ?? {}\n\n    type FileTree = {\n        type: 'file' | 'directory'\n        title: string\n        path: string\n        key: string\n        children?: FileTree[] // when directory\n    }\n\n    const fileTree: FileTree[] = []\n\n    for (const [title, value] of Object.entries(dirData)) {\n        const fullPath = parentPath ? `${parentPath}/${title}` : title\n\n        const isObject = getDataType(value) === 'object'\n\n        if (isObject) {\n            const subTree = createFileTree(value as DirData, {\n                parentPath: fullPath,\n            })\n            fileTree.push({\n                type: 'directory',\n                title,\n                key: fullPath,\n                path: fullPath,\n                children: subTree,\n            })\n        } else {\n            const path = value as string\n\n            fileTree.push({\n                type: 'file',\n                title,\n                key: path,\n                path: path,\n            })\n        }\n    }\n\n    return fileTree\n}\n\nexport const compressImg = (imgPath: string) => {\n    const img = new Image()\n    const canvas = document.createElement('canvas')\n    const context = canvas.getContext('2d')\n    img.src = imgPath\n    img.onload = function () {\n        // 图片原始尺寸\n        const originWidth = (this as any).width\n        const originHeight = (this as any).height\n        // 最大尺寸限制\n        const maxWidth = 400,\n            maxHeight = 400\n        // 目标尺寸\n        let targetWidth = originWidth,\n            targetHeight = originHeight\n        // 图片尺寸超过400x400的限制\n        if (originWidth > maxWidth || originHeight > maxHeight) {\n            if (originWidth / originHeight > maxWidth / maxHeight) {\n                // 更宽，按照宽度限定尺寸\n                targetWidth = maxWidth\n                targetHeight = Math.round(\n                    maxWidth * (originHeight / originWidth),\n                )\n            } else {\n                targetHeight = maxHeight\n                targetWidth = Math.round(\n                    maxHeight * (originWidth / originHeight),\n                )\n            }\n        }\n\n        // canvas对图片进行缩放\n        canvas.width = targetWidth\n        canvas.height = targetHeight\n        // 清除画布\n        context?.clearRect(0, 0, targetWidth, targetHeight)\n        // 图片压缩\n        context?.drawImage(img, 0, 0, targetWidth, targetHeight)\n    }\n}\n\n/**\n * 延迟执行代码以确保最小延迟时间的函数。\n *\n * @param {number} startTime - 函数执行的开始时间（以毫秒为单位）。\n * @param {number} endTime - 函数执行的结束时间（以毫秒为单位）。\n * @param {number} minDelayTime - 最小延迟时间（以毫秒为单位）。\n * @return {Promise<void>}\n */\nexport async function minDelayTime(\n    startTime = Date.now(),\n    endTime = Date.now(),\n    minDelayTime = 500,\n) {\n    if (endTime - startTime < minDelayTime) {\n        await delay(minDelayTime - (endTime - startTime))\n    }\n\n    return\n}\n\nexport const get404Md = async () => {\n    return request('/article/404.md').then((res) => {\n        const { data, success } = res\n\n        if (!success || !data) {\n            return '# 404'\n        }\n\n        return data as string\n    })\n}\n\nexport const urlChange = (\n    url: string,\n    options?: {\n        state?: any // 当使用者监听 popstate 时，要传给 event.state 的数据\n        go?: boolean // 修改 url 时是否直接跳转过去\n    },\n) => {\n    const { go = false, state = null } = options ?? {}\n\n    window.history.replaceState(null, '', url)\n\n    if (go) {\n        const popStateEvent = new PopStateEvent('popstate', { state })\n\n        window.dispatchEvent(popStateEvent)\n    }\n}\n","const LOG_COLOR_MAP = {\n    error: 'color: #fff; background-color: #f00',\n    info: 'color: #fff; background-color: #00f',\n    logo: 'color: #fff; background-color: #000',\n    trace: 'color: #000; background-color: #fff',\n}\n\nconst logoGroup = (\n    title: string,\n    options: {\n        sub: {\n            type: 'error' | 'info' | 'log' | 'trace'\n            message: string | Error | unknown\n        }[]\n    },\n) => {\n    const { sub = [] } = options ?? {}\n\n    console.group(`%c${title}`, 'color: #fff; background-color: #000')\n\n    sub.forEach((item) => {\n        const { type, message } = item\n\n        console[type](`%c${message}`, LOG_COLOR_MAP[type])\n    })\n\n    console.groupEnd()\n}\n\nexport default {\n    info: console.info,\n    warn: console.warn,\n    trace: console.trace,\n    error: console.error,\n    log: console.log,\n    group: logoGroup,\n}\n","import log from './log'\n\ntype RequestOptions = {\n    // 添加到 url 后: https://test.com?test=test\n    queryString?: Record<string, string | string[]>\n}\n\ntype RequestOnFulfilled = (config: RequestInit) => RequestInit\ntype RequestOnRejected = (error: Error) => Error\n\ntype ResponseOnFulfilled<V> = (response: Response) => V | Promise<V>\ntype ResponseOnRejected = (error: Error) => Error\n\ntype RequestInterceptors = {\n    request?: {\n        onFulfilled?: RequestOnFulfilled\n        onRejected?: RequestOnRejected\n    }[]\n    response?: {\n        onFulfilled?: ResponseOnFulfilled<any>\n        onRejected?: ResponseOnRejected\n    }[]\n}\n\n// 将拦截器存到全局内存中.\nconst interceptorsMap: RequestInterceptors = {\n    request: [],\n    response: [],\n}\n\n// 拦截器函数\nconst interceptors = {\n    request: {\n        // 添加拦截器到内存中\n        use: function (\n            onFulfilled?: RequestOnFulfilled,\n            onRejected?: RequestOnRejected,\n        ) {\n            interceptorsMap.request?.push({\n                onFulfilled,\n                onRejected,\n            })\n        },\n    },\n    response: {\n        use: function (\n            onFulfilled?: ResponseOnFulfilled<any>,\n            onRejected?: ResponseOnRejected,\n        ) {\n            interceptorsMap.response?.push({\n                onFulfilled,\n                onRejected,\n            })\n        },\n    },\n}\n\nconst checkResponse = (response: Response) => {\n    const { status, statusText } = response\n\n    if (status >= 200 && status < 300) {\n        return response\n    }\n\n    const error = new Error(statusText)\n\n    interceptorsMap.response?.forEach(({ onRejected }) => {\n        if (onRejected) {\n            onRejected(error)\n        }\n    })\n\n    throw error\n}\n\nconst handleResponse = (response: Response) => {\n    const contentType = response.headers.get('content-type')\n\n    let newResponse: Response | Promise<Response> | null = null\n\n    interceptorsMap.response?.forEach(({ onFulfilled }) => {\n        if (onFulfilled) {\n            newResponse = onFulfilled(response)\n        }\n    })\n\n    if (contentType && contentType.includes('application/json')) {\n        return newResponse ?? response.json()\n    } else {\n        return newResponse ?? response.text()\n    }\n}\n\nconst handleResult = <R>(result: R) => {\n    return {\n        error: null,\n        data: result,\n        success: true,\n    }\n}\n\nconst handleError = (error: Error) => {\n    log.error('Request Error: ', error)\n    throw error\n}\n\nasync function request<Result = any>(\n    url: string,\n    params?: RequestInit & RequestOptions,\n): Promise<{\n    data: Result\n    success: boolean\n    error: Error | null\n}> {\n    const { queryString, ...reset } = params ?? {}\n\n    const headers: Record<string, string> = {\n        Accept: '*/*',\n        ...((params?.headers as Record<string, string>) ?? {}),\n    }\n\n    if (queryString) {\n        url += `?${Object.keys(queryString)\n            .map((key) => {\n                const value = queryString[key]\n                if (Array.isArray(value)) {\n                    let result = ''\n                    value.forEach((item) => {\n                        result += `${key}=${item}&`\n                    })\n\n                    return result.replace(/&$/, '')\n                }\n\n                return `${key}=${value}`\n            })\n            .join('&')}`\n    }\n\n    let options: RequestInit = {\n        ...reset,\n        headers,\n    }\n\n    // 调用请求拦截\n    interceptorsMap.request?.forEach(async ({ onFulfilled, onRejected }) => {\n        if (onFulfilled) {\n            options = onFulfilled(options)\n        }\n    })\n\n    return fetch(url, options)\n        .then(checkResponse)\n        .then(handleResponse)\n        .then(handleResult)\n        .catch(handleError)\n}\n\nrequest.interceptors = interceptors\n\nexport default request\n"],"sourceRoot":""}