<!DOCTYPE html>
<html data-theme="light">
    <head>
        <meta charSet="utf-8" />
        <meta name="description" content="yomua" />
        <meta name="keywords" content="yomua" />
        <meta name="author" content="yomua" />
        <meta name="viewport" content="width=device-width,initial-scale=1" />
        <title></title>
    </head>
    <style>
        * {
            box-sizing: border-box;
        }

        body,
        div,
        dl,
        dt,
        dd,
        ul,
        ol,
        li,
        h1,
        h2,
        h3,
        h4,
        h5,
        h6,
        pre,
        code,
        form,
        fieldset,
        legend,
        input,
        p,
        blockquote,
        th,
        td {
            margin: 0;
            padding: 0;
        }

        a {
            text-decoration: none;
        }

        a:link {
            color: none;
        }

        html {
            line-height: 1.15;
            /* 1 */
            -webkit-text-size-adjust: 100%;
            /* 2 */
        }

        body {
            /* 
             *  解决因为切换页面时 body 滚动条出现/消失 而导致页面看起来像是在抖动的问题 
             *  减去 body-scroll-width 是因为视区 vw 包含滚动条宽度, 而实际内容在参与 css 规则时, 会去掉滚动条宽度.
             */
            width: calc(100vw - var(--body-scroll-width)) !important;
            background-color: var(--global-primary-bg-color) !important;
        }

        body::-webkit-scrollbar {
            width: 10px;
        }

        body::-webkit-scrollbar-track {
            opacity: 0;
        }

        body::-webkit-scrollbar-thumb {
            background: #0000004d;
            opacity: 0.2;
            border-radius: 25px;
        }

        main {
            display: block;
        }

        hr {
            box-sizing: content-box;
            overflow: visible;
            border: none;
        }
    </style>

    <body>
        <div id="root"></div>
    </body>

    <script>
        const urlParams = new URLSearchParams(window.location.search)
        const redirected = urlParams.get('redirected')

        // 例如: /feature/article/xxx.md
        const pathname = urlParams.get('pathname')

        document.addEventListener('DOMContentLoaded', function () {
            if (redirected !== 'true') {
                return
            }

            if (pathname.indexOf('/feature/article') === -1) {
                window.location.href =
                    location.origin || 'https://www.whyhw.com'

                return
            }

            /** 如果用户是直接通过地址栏访问 /feature/article/xxx.md */

            // 并非第一次进入网页, 则存在
            const selectedArticleKeyBefore =
                localStorage.getItem('selectedArticleKey') || ''

            // 通过选中的 .md 文件的 key, 找到 public 文件夹所在的位置
            // => /home/runner/work/yomua/yomua/public/
            // => D:/code/yomua/public/
            let rootPath = selectedArticleKeyBefore.slice(
                0,
                selectedArticleKeyBefore.indexOf('article'),
            )

            if (!rootPath) {
                rootPath = window.location.origin.includes('whyhw.com')
                    ? '/home/runner/work/yomua/yomua/public/'
                    : 'D:/code/yomua/public/'
            }

            // 得到文章存储在服务器的完整路径
            // 例如: /home/runner/work/yomua/yomua/public/article/xxx.md
            const selectedArticleKeyAfter = `${rootPath}${pathname.replace(
                '/feature/', // 删除 feature, 是因为我们将文章存储于 public/article
                '',
            )}`

            // 此时页面已经加载, umi 已经可以成功拦截路由
            // 所以此时再把页面的地址改成 => https://www.whyhw.com/feature/article/xxx.md
            history.replaceState(
                null,
                null,
                location.origin +
                    '/feature/article' +
                    '?redirected=true' +
                    `&pathname=${pathname}` +
                    `&selectedArticleKey=${selectedArticleKeyAfter}` +
                    location.hash,
            )

            // 手动触发路由跳转到 /feature/article
            const popStateEvent = new PopStateEvent('popstate')

            window.dispatchEvent(popStateEvent)
        })
    </script>
</html>
