{"version":3,"sources":["webpack:///./src/pages/feature/three/全景看房.tsx","webpack:///./src/assets/img/room/after.jpg","webpack:///./src/assets/img/room/before.jpg","webpack:///./src/assets/img/room/down.jpg","webpack:///./src/assets/img/room/left.jpg","webpack:///./src/assets/img/room/right.jpg","webpack:///./src/assets/img/room/up.jpg"],"names":["全景看房","container","useRef","scene","THREE","camera","window","innerWidth","innerHeight","position","z","renderer","setSize","render","requestAnimationFrame","imgArr","right","left","up","down","before","after","boxMaterials","forEach","item","texture","load","includes","rotation","center","push","map","geometry","cube","scale","add","useWindowEventListener","aspect","updateProjectionMatrix","setPixelRatio","devicePixelRatio","delay","useEffect","current","controls","OrbitControls","maxDistance","enableDamping","appendChild","domElement","ref","memo","module","exports"],"mappings":"+QAYA,SAASA,IACL,IAAMC,GAAYC,YAAuB,MAEnCC,EAAQ,IAAIC,MAEZC,EAAS,IAAID,MACf,GACAE,OAAOC,WAAaD,OAAOE,YAC3B,GACA,KAEJH,EAAOI,SAASC,EAAI,GAGpB,IAAMC,EAAW,IAAIP,MACrBO,EAASC,QAAQN,OAAOC,WAAYD,OAAOE,aAE3C,IAAMK,EAAS,KACXF,EAASE,OAAOV,EAAOE,GAEvBS,sBAAsBD,EAAtB,EAIEE,EAAS,CAACC,IAAOC,IAAMC,IAAIC,IAAMC,IAAQC,KACzCC,EAAsB,GAC5BP,EAAOQ,SAASC,IACZ,IAAMC,GAAU,IAAIrB,OAAsBsB,KAAKF,GAE3CA,EAAKG,SAAS,UACdF,EAAQG,UAAY,GACpBH,EAAQI,OAAS,IAAIzB,MAAc,GAAK,KAE5CkB,EAAaQ,KAAK,IAAI1B,MAAwB,CAAE2B,IAAKN,IAArD,IAGJ,IAAMO,EAAW,IAAI5B,MAAkB,EAAG,EAAG,GAEvC6B,EAAO,IAAI7B,MAAW4B,EAAUV,GA+BtC,OA9BAW,EAAKD,SAASE,MAAM,EAAG,GAAI,GAE3B/B,EAAMgC,IAAIF,IAGVG,QACI,UACA,KACI/B,EAAOgC,OAAS/B,OAAOC,WAAaD,OAAOE,YAC3CH,EAAOiC,yBACP3B,EAASC,QAAQN,OAAOC,WAAYD,OAAOE,aAC3CG,EAAS4B,cAAcjC,OAAOkC,iBAA9B,GAEJ,GACA,CAAEC,MAAO,OAGbC,gBAAU,KAAM,MACZ,GAAKzC,EAAU0C,QAAf,CAKA,IAAMC,EAAW,IAAIC,IAAcxC,EAAQJ,EAAU0C,SACrDC,EAASE,YAAc,GACvBF,EAASG,eAAgB,EACzB,UAAA9C,EAAU0C,eAAV,SAAmBK,YAAYrC,EAASsC,YACxCpC,GAPC,CAOO,GACT,IAEI,uBAAKqC,IAAKjD,GACpB,CAED,cAAekD,UAAKnD,E,wBCpFpBoD,EAAOC,QAAU,IAA0B,2B,wBCA3CD,EAAOC,QAAU,IAA0B,4B,wBCA3CD,EAAOC,QAAU,IAA0B,0B,wBCA3CD,EAAOC,QAAU,IAA0B,0B,wBCA3CD,EAAOC,QAAU,IAA0B,2B,wBCA3CD,EAAOC,QAAU,IAA0B,wB","file":"8453.a21c86c3.async.js","sourcesContent":["import { memo, useEffect, useRef } from 'react'\nimport * as THREE from 'three'\nimport { useWindowEventListener } from '@yomua/y-hooks'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n\nimport up from '@/assets/img/room/up.jpg'\nimport down from '@/assets/img/room/down.jpg'\nimport left from '@/assets/img/room/left.jpg'\nimport right from '@/assets/img/room/right.jpg'\nimport before from '@/assets/img/room/before.jpg'\nimport after from '@/assets/img/room/after.jpg'\n\nfunction 全景看房() {\n    const container = useRef<HTMLDivElement>(null)\n    // 场景\n    const scene = new THREE.Scene()\n    // 相机\n    const camera = new THREE.PerspectiveCamera(\n        75,\n        window.innerWidth / window.innerHeight,\n        0.1,\n        1000,\n    )\n    camera.position.z = 0.1\n\n    // 渲染器\n    const renderer = new THREE.WebGLRenderer()\n    renderer.setSize(window.innerWidth, window.innerHeight)\n\n    const render = () => {\n        renderer.render(scene, camera)\n        // 反复渲染每一帧\n        requestAnimationFrame(render)\n    }\n\n    // 创建材质\n    const imgArr = [right, left, up, down, before, after]\n    const boxMaterials: any[] = []\n    imgArr.forEach((item) => {\n        const texture = new THREE.TextureLoader().load(item)\n        // 按中心旋转指定图片\n        if (item.includes('down')) {\n            texture.rotation = -52\n            texture.center = new THREE.Vector2(0.5, 0.5)\n        }\n        boxMaterials.push(new THREE.MeshBasicMaterial({ map: texture }))\n    })\n    // 创建几何对象\n    const geometry = new THREE.BoxGeometry(1, 1, 1)\n    // 创建立方体并添加材质\n    const cube = new THREE.Mesh(geometry, boxMaterials)\n    cube.geometry.scale(1, 1, -1)\n    // 将立方体添加到场景\n    scene.add(cube)\n\n    // 响应式画布\n    useWindowEventListener(\n        'resize',\n        () => {\n            camera.aspect = window.innerWidth / window.innerHeight\n            camera.updateProjectionMatrix()\n            renderer.setSize(window.innerWidth, window.innerHeight)\n            renderer.setPixelRatio(window.devicePixelRatio)\n        },\n        [],\n        { delay: 300 },\n    )\n\n    useEffect(() => {\n        if (!container.current) {\n            return\n        }\n\n        // 创建控制器\n        const controls = new OrbitControls(camera, container.current)\n        controls.maxDistance = 0.5\n        controls.enableDamping = true\n        container.current?.appendChild(renderer.domElement)\n        render()\n    }, [])\n\n    return <div ref={container}></div>\n}\n\nexport default memo(全景看房)\n","module.exports = __webpack_public_path__ + \"static/after.501c10a2.jpg\";","module.exports = __webpack_public_path__ + \"static/before.848c0b63.jpg\";","module.exports = __webpack_public_path__ + \"static/down.c7d6a8a4.jpg\";","module.exports = __webpack_public_path__ + \"static/left.cdd6ba4b.jpg\";","module.exports = __webpack_public_path__ + \"static/right.72a097cb.jpg\";","module.exports = __webpack_public_path__ + \"static/up.a58194b5.jpg\";"],"sourceRoot":""}