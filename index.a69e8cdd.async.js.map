{"version":3,"sources":["webpack:///./src/index.less","webpack:///./src/layouts/header/index.less","webpack:///./src/layouts/header/index.tsx","webpack:///./src/index.tsx","webpack:///./src/utils/storage.ts"],"names":["module","exports","Header","props","theme","onToggleTheme","useState","menuIcon","setMenuIcon","history","useHistory","location","useLocation","useEffect","EventEmitter","EVENT_NAME","icon","className","classnames","Style","pathname","includes","onClick","push","RouteLink","event","name","handler","isCtrlShiftX","ctrlKey","shiftKey","key","toLowerCase","preventDefault","kbd","text","style","faSun","faMoon","activeTheme","storage","LOCAL_STORAGE_NAME","value","memo","library","fas","faLinkedin","faTwitterSquare","faYoutubeSquare","faFacebookSquare","Index","setTheme","handleChangeTheme","useCallback","html","document","querySelector","setAttribute","localTheme","children","saveLocalStorage","data","localStorage","setItem","log","saveBatchLocalStorage","isHaveKey","forEach","item","getLocalStorage","options","returnType","converter","CONVERT_TYPE_MAP","getItem","clearLocalStorage","removeItem","clearAllLocalStorage","clear","saveSessionStorage","sessionStorage","getSessionStorage"],"mappings":"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","file":"index.a69e8cdd.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"layout___1uzIr\",\"container\":\"container___3XCPZ\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___21_uB\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___3QJyU\",\"textOverflowEllipsis\":\"textOverflowEllipsis___1wr59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-light\":\"header-light___3cGmx\",\"header-dark\":\"header-dark___pcRuq\",\"header\":\"header___2O2lm\",\"menuIcon\":\"menuIcon___3n4mO\",\"themeIcon\":\"themeIcon___q2Qkx\",\"logo\":\"logo___11RZm\",\"headerInfo\":\"headerInfo___25wHO\",\"searchBox\":\"searchBox___3hXJ9\",\"hideMenuIcon\":\"hideMenuIcon___f7ivs\",\"left\":\"left___2g1gv\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___2C_vn\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___scs3c\",\"textOverflowEllipsis\":\"textOverflowEllipsis___PsGMq\"};","import { memo, useEffect, useState } from 'react'\nimport { useHistory } from 'umi'\nimport { useLocation } from 'react-router-dom'\nimport classnames from '@yomua/y-classnames'\nimport EventEmitter from '@yomua/y-eventemitter'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons'\n\nimport storage from '@/utils/storage'\nimport { Direction, Search } from '@/component'\nimport { RouteLink, EVENT_NAME, LOCAL_STORAGE_NAME } from '@/utils/constant'\n\nimport Style from './index.less'\n\ninterface HeaderProps {\n    theme?: Theme\n    onToggleTheme?: (theme: Theme) => void\n}\n\nconst Header = (props: HeaderProps) => {\n    const { theme = 'light', onToggleTheme = () => null } = props\n\n    const [menuIcon, setMenuIcon] = useState<'bars' | 'xmark'>('bars')\n\n    const history = useHistory()\n    const location = useLocation() // 不能替换为 location, 要用 useLocation 来监听 url change, 从而使得组件重新渲染\n\n    useEffect(() => {\n        EventEmitter.on(EVENT_NAME.HEADER_MENU_ICON, (icon) => {\n            setMenuIcon(icon)\n        })\n\n        return () => {\n            EventEmitter.off(EVENT_NAME.HEADER_MENU_ICON)\n        }\n    }, [])\n\n    return (\n        <div className={classnames(Style.header, Style[`header-${theme}`])}>\n            <Direction className={Style.headerInfo}>\n                <Direction className={Style.left}>\n                    <FontAwesomeIcon\n                        icon={menuIcon}\n                        className={classnames(Style.menuIcon, {\n                            [Style.hideMenuIcon]:\n                                !location.pathname.includes('/feature/article'),\n                        })}\n                        onClick={() => {\n                            setMenuIcon(menuIcon === 'bars' ? 'xmark' : 'bars')\n                            EventEmitter.emit(EVENT_NAME.OPEN_ARTICLE_DIRECTORY)\n                        }}\n                    />\n\n                    <div\n                        className={Style.logo}\n                        onClick={() => {\n                            history.push(`/${RouteLink.Index}`)\n                            setMenuIcon('bars')\n                        }}\n                    ></div>\n                </Direction>\n                <div\n                    className={Style.searchBox}\n                    onClick={() => {\n                        EventEmitter.emit(EVENT_NAME.TOGGLE_SEARCH_PANEL, true)\n                    }}\n                >\n                    {location.pathname.includes('/feature/article') && (\n                        <Search\n                            event={{\n                                name: 'keydown',\n                                handler: function (event: KeyboardEvent) {\n                                    const isCtrlShiftX =\n                                        event.ctrlKey &&\n                                        event.shiftKey &&\n                                        event.key.toLowerCase() === 'x'\n\n                                    if (isCtrlShiftX) {\n                                        event.preventDefault()\n                                        EventEmitter.emit(\n                                            EVENT_NAME.TOGGLE_SEARCH_PANEL,\n                                            false,\n                                        )\n                                    }\n                                },\n                            }}\n                            kbd={[\n                                { text: 'Ctrl' },\n                                { text: 'Shift' },\n                                { text: 'X' },\n                            ]}\n                        />\n                    )}\n                </div>\n\n                <Direction style={Style.right}>\n                    <FontAwesomeIcon\n                        className={Style.themeIcon}\n                        icon={theme === 'light' ? faSun : faMoon}\n                        onClick={() => {\n                            const activeTheme =\n                                theme === 'light' ? 'dark' : 'light'\n\n                            storage.saveLocalStorage({\n                                key: LOCAL_STORAGE_NAME.DATA_THEME,\n                                value: activeTheme,\n                            })\n\n                            // 将在 @/index 设置主题\n                            onToggleTheme(activeTheme)\n                        }}\n                    />\n                </Direction>\n            </Direction>\n        </div>\n    )\n}\n\nexport default memo(Header)\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Layout } from 'antd'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport {\n    faLinkedin,\n    faTwitterSquare,\n    faYoutubeSquare,\n    faFacebookSquare,\n} from '@fortawesome/free-brands-svg-icons'\n// import IndexedDB from '@yomua/y-indexeddb'\n\nimport style from './index.less'\n// import Footer from './layouts/footer'\nimport { Sidebar } from './component'\nimport Header from './layouts/header'\nimport storage from './utils/storage'\nimport { ThemeProvider } from './contexts'\nimport { LOCAL_STORAGE_NAME } from './utils/constant'\n\n// Ref: https://docs.fontawesome.com/web/use-with/react/add-icons/#using-the-library\n// 添加 fontawesome 免费版: https://fontawesome.com/search?q=menu&o=r&m=free\nlibrary.add(fas, faLinkedin, faTwitterSquare, faYoutubeSquare, faFacebookSquare)\n\n// 初始化 IndexedDB\n// 注意: 目前不需要用它\n// IndexedDB.singleInstance.open({\n//     dbVersion: 1,\n//     dbName: 'yomuaDB',\n//     dbStoreName: 'yomua',\n//     specifyKey: 'filepath',\n// })\n\n// 此文件匹配路由 '/', 所以可以认为此文件类似入口文件;\n// 为什么说类似? 因为 umi 已经配置了入口文件(使用者无感知), src/.umi/umi.ts,\n// => Ref: /umi_webpack_dev.js 或 umi_webpack_prod.js - entry 字段\nconst Index = (props: { children: React.ReactNode }) => {\n    const [theme, setTheme] = useState<Theme>('light')\n\n    const handleChangeTheme = useCallback((theme: Theme) => {\n        setTheme(theme)\n    }, [])\n\n    useEffect(() => {\n        const html = document.querySelector('html')\n\n        if (!html) {\n            return\n        }\n\n        html.setAttribute(LOCAL_STORAGE_NAME.DATA_THEME, theme)\n    }, [theme])\n\n    // 恢复用户上一次选择的主题\n    useEffect(() => {\n        const localTheme = storage.getLocalStorage<'string', Theme>(\n            LOCAL_STORAGE_NAME.DATA_THEME,\n        )\n\n        if (localTheme) {\n            setTheme(localTheme)\n        }\n    }, [])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Layout className={style.layout}>\n                <Header theme={theme} onToggleTheme={handleChangeTheme} />\n\n                <Layout.Content className={style.container}>\n                    <Sidebar />\n                    {props.children}\n                </Layout.Content>\n\n                {/* <Footer /> */}\n            </Layout>\n        </ThemeProvider>\n    )\n}\n\nexport default Index\n","import log from '@yomua/y-tlog'\n\nimport { EnvValueType, JSValueType } from './utils.d'\nimport { CONVERT_TYPE_MAP, LOCAL_STORAGE_NAME } from './constant'\n\ntype StorageDataKey<KeyType> = { key: KeyType; value: string }\n\nconst saveLocalStorage = (\n    data: StorageDataKey<LOCAL_STORAGE_NAME>,\n    // config?,\n) => {\n    const { key, value } = data\n\n    if (!key) {\n        log.error('saveLocalStorage key 不存在', key)\n        return false\n    }\n\n    localStorage.setItem(key, value)\n\n    return true\n}\n\nconst saveBatchLocalStorage = (data: StorageDataKey<LOCAL_STORAGE_NAME>[]) => {\n    let isHaveKey = true\n\n    data.forEach((item) => {\n        if (!item.key) {\n            isHaveKey = false\n            log.error(\n                '批量保存数据到本地失败: saveBatchLocalStorage key 不存在',\n            )\n            return\n        }\n    })\n\n    if (!isHaveKey) return false\n\n    data.forEach((item) => {\n        const { key, value } = item ?? {}\n\n        localStorage.setItem(key, value)\n    })\n\n    return true\n}\n\nconst getLocalStorage = <\n    ReturnType extends JSValueType = 'string',\n    DataType = string,\n>(\n    key: LOCAL_STORAGE_NAME,\n    options?: { returnType?: ReturnType },\n): EnvValueType<ReturnType, DataType> => {\n    if (!key) {\n        log.error('getLocalStorage: key 不存在')\n        return '' as EnvValueType<ReturnType, DataType>\n    }\n\n    const { returnType = 'string' } = options ?? {}\n\n    const converter = CONVERT_TYPE_MAP[returnType]\n\n    return converter(localStorage.getItem(key) ?? '') as EnvValueType<\n        ReturnType,\n        DataType\n    >\n}\n\nconst clearLocalStorage = (key: LOCAL_STORAGE_NAME) => {\n    if (!key) {\n        log.error('clearLocalStorage: key 不存在')\n        return false\n    }\n\n    localStorage.removeItem(key)\n\n    return true\n}\n\nconst clearAllLocalStorage = () => {\n    localStorage.clear()\n    return true\n}\n\nconst saveSessionStorage = (\n    data: StorageDataKey<string>,\n    // config?,\n) => {\n    const { key, value } = data\n\n    if (!key) {\n        log.error('saveSessionStorage: key 不存在')\n        return\n    }\n\n    sessionStorage.setItem(key, value)\n}\n\nconst getSessionStorage = (key: string) => {\n    if (!key) {\n        log.error('getSessionStorage: key 不存在')\n        return ''\n    }\n\n    return sessionStorage.getItem(key) ?? ''\n}\n\nexport default {\n    // localStorage\n    saveLocalStorage,\n    saveBatchLocalStorage,\n    getLocalStorage,\n    clearLocalStorage,\n    clearAllLocalStorage,\n\n    // sessionStorage\n    saveSessionStorage,\n    getSessionStorage,\n}\n"],"sourceRoot":""}