{"version":3,"sources":["webpack:///./src/index.less","webpack:///./src/layouts/header/index.less","webpack:///./packages/y-eventmitter/index.ts","webpack:///./packages/y-indexeddb/index.ts","webpack:///./src/layouts/header/index.tsx","webpack:///./src/index.tsx"],"names":["module","exports","SingletonEventemitter","Eventemitter3","constructor","super","singleEventEmitterInstance","this","singleInstance","on","event","fn","context","emit","args","off","once","removeAllListeners","IndexedDBSymbol","Symbol","IndexedDB","symbol","db","dbName","dbVersion","dbStoreName","specifyKey","Error","indexedDBInstance","getObjectStore","mode","transaction","sessionStorage","setItem","JSON","stringify","location","reload","console","info","objectStore","open","options","req","window","indexedDB","onupgradeneeded","store","currentTarget","result","createObjectStore","keyPath","autoIncrement","createIndex","unique","onsuccess","getDataFromStore","filepath","index","get","addDataFromStore","data","add","deleteDataFromStore","id","target","delete","updateDataFromStore","updateData","allRequest","getAll","allData","dataToUpdate","find","value","put","file","clearDataFromStore","clear","Header","props","theme","onToggleTheme","useState","isShowX","setIsShowX","history","useHistory","useLocation","handleClickTitle","useCallback","push","RouteLink","handleToggleTheme","storage","key","LOCAL_STORAGE_NAME","handleOpenDirectoryOnlyArticle","EventEmitter","EVENT_EMITTER_NAME","goBack","useEffect","className","classnames","style","alignItems","justifyContent","icon","pathname","includes","onClick","faSun","faMoon","memo","library","fas","faFacebookSquare","faYoutubeSquare","faLinkedin","faTwitterSquare","Index","setTheme","handleChangeTheme","html","document","querySelector","setAttribute","localTheme","children"],"mappings":"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","file":"index.da5790be.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"content___3-pTm\",\"layout\":\"layout___1uzIr\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___21_uB\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___3QJyU\",\"textOverflowEllipsis\":\"textOverflowEllipsis___1wr59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-light\":\"header-light___3cGmx\",\"header-dark\":\"header-dark___pcRuq\",\"header\":\"header___2O2lm\",\"bars\":\"bars___26yCn\",\"title\":\"title___a0WaH\",\"themeIcon\":\"themeIcon___q2Qkx\",\"headerInfo\":\"headerInfo___25wHO\",\"hideBars\":\"hideBars___bkJr0\",\"back\":\"back___FsmmO\",\"hideLeftIcon\":\"hideLeftIcon___L5pJo\",\"navigation\":\"navigation___3mfr-\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___2C_vn\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___scs3c\",\"textOverflowEllipsis\":\"textOverflowEllipsis___PsGMq\"};","import Eventemitter3 from 'eventemitter3'\n\n/**\n * Reference:\n * https://nodejs.org/api/events.html#events\n * http://nodejs.cn/api-v16/events.html#events\n * https://www.npmjs.com/package/eventemitter3\n */\nclass SingletonEventemitter extends Eventemitter3 {\n    /* eslint-disable no-use-before-define */\n    // 因为 singleInstance - this 的类型是 SingletonEventemitter, 所以要使用 this.singleEventEmitterInstance 就得规定个 static singleEventEmitterInstance\n    // 只是用在 static get singleInstance, 其他地方使用 this.xxx 用的下面这个。\n    static singleEventEmitterInstance: Eventemitter3\n    singleEventEmitterInstance: Eventemitter3 | null\n    /* eslint-disable no-use-before-define */\n\n    constructor() {\n        super()\n        this.singleEventEmitterInstance = null\n    }\n\n    static get singleInstance() {\n        if (!this.singleEventEmitterInstance) {\n            this.singleEventEmitterInstance = new Eventemitter3()\n        }\n\n        return this.singleEventEmitterInstance\n    }\n\n    // 注册一个事件并添加监听器\n    on<T extends string | symbol>(\n        event: T,\n        fn: (...args: any[]) => void,\n        context?: any,\n    ): this {\n        this.singleEventEmitterInstance?.on(event, fn, context)\n        return this\n    }\n\n    // 触发某个注册的事件的监听器\n    emit<T extends string | symbol>(event: T, ...args: any[]): boolean {\n        return this.singleEventEmitterInstance?.emit(event, ...args) ?? false\n    }\n\n    // 移除某个注册事件\n    off<T extends string | symbol>(\n        event: T,\n        fn?: ((...args: any[]) => void) | undefined,\n        context?: any,\n        once?: boolean | undefined,\n    ): this {\n        this.singleEventEmitterInstance?.off(event, fn, context, once)\n\n        return this\n    }\n\n    // 移除所有事件\n    removeAllListeners(event?: string | symbol | undefined): this {\n        this.singleEventEmitterInstance?.removeAllListeners(event)\n\n        return this\n    }\n}\n\nexport default SingletonEventemitter\n","type Data = { filepath: string; file: string }\n\nconst IndexedDBSymbol = Symbol()\n\nclass IndexedDB {\n    /* eslint-disable no-use-before-define */\n    static indexedDBInstance: IndexedDB\n    /* eslint-disable no-use-before-define */\n    private db: IDBDatabase\n    private dbName: string\n    private dbVersion: number\n    private dbStoreName: string\n    private specifyKey: string\n\n    constructor(symbol?: symbol) {\n        /**\n         * 以下方法允许开发者即使多次使用 new 也能创建单实例\n         * 坏处是：用户不能创建多实例了，由于这是一个 package\n         * 所以不使用此方法，而是提供 singleInstance 让用户选择单实例或多实例（多次 new）\n         */\n        // if (IndexedDB.indexedDBInstance) {\n        //     return IndexedDB.indexedDBInstance\n        // }\n        // IndexedDB.indexedDBInstance = this\n\n        if (symbol && symbol !== IndexedDBSymbol) {\n            throw new Error('意外的重复初始化 IndexedDB')\n        }\n\n        this.db = null as any\n        this.dbName = ''\n        this.dbVersion = 1\n        this.dbStoreName = ''\n        this.specifyKey = ''\n    }\n\n    static get singleInstance() {\n        if (!this.indexedDBInstance) {\n            this.indexedDBInstance = new IndexedDB(IndexedDBSymbol)\n        }\n\n        return this.indexedDBInstance\n    }\n\n    private getObjectStore(\n        dbStoreName: string,\n        mode: 'readonly' | 'readwrite' | 'versionchange',\n    ) {\n        if (!this.db?.transaction) {\n            sessionStorage.setItem('indexedDB_this', JSON.stringify(this))\n            location.reload()\n            console.info('已尝试刷新页面，查看 session 找错误原因')\n        }\n\n        return this.db?.transaction(dbStoreName, mode)?.objectStore(dbStoreName)\n    }\n\n    // 初始化请求\n    open(options?: {\n        specifyKey?: string // 用来通过此 key 进行 get, delete\n        dbName?: string\n        dbVersion?: number\n        dbStoreName?: string\n    }) {\n        const {\n            specifyKey = 'filepath',\n            dbName = 'yomuaDB',\n            dbVersion = 1,\n            dbStoreName = 'yomua',\n        } = options ?? {}\n\n        this.dbName = dbName\n        this.dbVersion = dbVersion\n        this.dbStoreName = dbStoreName\n        this.specifyKey = specifyKey\n\n        const req = window.indexedDB.open(dbName, dbVersion)\n\n        req.onupgradeneeded = (event: any) => {\n            const store = event?.currentTarget?.result.createObjectStore(\n                dbStoreName,\n                {\n                    keyPath: 'id',\n                    autoIncrement: true,\n                },\n            )\n\n            store.createIndex(this.specifyKey, this.specifyKey, {\n                unique: true,\n            })\n        }\n\n        req.onsuccess = () => {\n            // Better use \"this\" than \"req\" to get the result to avoid problems with garbage collection.\n            // 但是使用 class 方法比较麻烦，这里就直接使用 req.result\n            // db = this.result;\n            this.db = req.result\n\n            // 不能这么做，事务将会在 onsuccess 结束后就被关闭\n            // 参见：https://developer.mozilla.org/zh-CN/docs/Web/API/IndexedDB_API/Using_IndexedDB#%E5%90%91%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E5%A2%9E%E5%8A%A0%E6%95%B0%E6%8D%AE\n            // this.store = this.getObjectStore(this.dbStoreName, 'readwrite')\n        }\n    }\n\n    getDataFromStore(filepath: string) {\n        if (!filepath) return null as any\n\n        const store = this.getObjectStore(this.dbStoreName, 'readonly')\n        const index = store.index(this.specifyKey)\n\n        return index.get(filepath)\n    }\n\n    addDataFromStore(filepath: string, data: Data) {\n        if (!filepath) return null as any\n\n        const store = this.getObjectStore(this.dbStoreName, 'readwrite')\n\n        return store?.add({\n            ...data,\n            filepath,\n        })\n    }\n\n    deleteDataFromStore(filepath: string) {\n        if (!filepath) return null as any\n\n        const store = this.getObjectStore(this.dbStoreName, 'readwrite')\n\n        const req = store.index(this.specifyKey)\n\n        req.get(filepath).onsuccess = (event: any) => {\n            const id = event?.target?.result?.id\n            store?.delete(id)\n        }\n    }\n\n    updateDataFromStore(filepath: string, updateData: string) {\n        if (!filepath) return null as any\n\n        const store = this.getObjectStore(this.dbStoreName, 'readwrite')\n\n        const allRequest = store.getAll()\n\n        allRequest.onsuccess = (event: any) => {\n            const allData = event?.target?.result || []\n\n            const dataToUpdate = allData.find(\n                (value: Data) => value.filepath === filepath,\n            )\n\n            if (!dataToUpdate) {\n                this.addDataFromStore(filepath, { filepath, file: updateData })\n                return\n            }\n\n            store.put({\n                ...dataToUpdate,\n                file: updateData,\n            })\n        }\n    }\n\n    clearDataFromStore() {\n        const store = this.getObjectStore(this.dbStoreName, 'readwrite')\n        store.clear()\n    }\n}\n\nexport default IndexedDB","import { memo, useCallback, useEffect, useState } from 'react'\nimport { useHistory } from 'umi'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons'\n\nimport classnames from '~/packages/y-classnames'\nimport EventEmitter from '~/packages/y-eventmitter'\n\nimport { storage } from '@/utils'\nimport { Text, Direction } from '@/component'\nimport {\n    RouteName,\n    RouteLink,\n    EVENT_EMITTER_NAME,\n    LOCAL_STORAGE_NAME,\n} from '@/utils/constant'\n\nimport style from './index.less'\nimport { useLocation } from 'umi'\n\ninterface HeaderProps {\n    theme?: Theme\n    onToggleTheme?: (theme: Theme) => void\n}\n\n// const navigationData = [\n//     { id: 'index', label: RouteName.Index, link: RouteLink.Index },\n//     { id: 'type', label: RouteName.Type, link: RouteLink.Type },\n//     { id: 'mood', label: RouteName.Mood, link: RouteLink.Mood },\n//     { id: 'about', label: RouteName.About, link: RouteLink.About },\n// ]\n\nconst Header = (props: HeaderProps) => {\n    const { theme = 'light', onToggleTheme = () => null } = props\n\n    // 显示 [X] 图标\n    const [isShowX, setIsShowX] = useState(false)\n\n    const history = useHistory()\n    const location = useLocation()\n\n    const handleClickTitle = useCallback(() => {\n        history.push(`/${RouteLink.Index}`)\n        setIsShowX(false)\n    }, [])\n\n    const handleToggleTheme = useCallback((theme: Theme) => {\n        return () => {\n            // 将在 @/index 设置主题\n            storage.saveLocalStorage({\n                key: LOCAL_STORAGE_NAME.DATA_THEME,\n                value: theme === 'light' ? 'dark' : 'light',\n            })\n\n            if (theme === 'light') {\n                onToggleTheme('dark')\n                return\n            }\n            onToggleTheme('light')\n        }\n    }, [])\n\n    const handleOpenDirectoryOnlyArticle = useCallback(() => {\n        EventEmitter.singleInstance.emit(\n            EVENT_EMITTER_NAME.SHOW_HEADER_X,\n            !isShowX,\n        )\n\n        EventEmitter.singleInstance.emit(\n            EVENT_EMITTER_NAME.OPEN_ARTICLE_DIRECTORY,\n        )\n    }, [isShowX])\n\n    const handleBack = useCallback(() => {\n        history.goBack()\n    }, [])\n\n    useEffect(() => {\n        EventEmitter.singleInstance.on(\n            EVENT_EMITTER_NAME.SHOW_HEADER_X,\n            (isShowX) => {\n                setIsShowX(isShowX)\n            },\n        )\n\n        return () => {\n            EventEmitter.singleInstance.off(EVENT_EMITTER_NAME.SHOW_HEADER_X)\n        }\n    }, [])\n\n    return (\n        <div className={classnames(style.header, style[`header-${theme}`])}>\n            <Direction\n                alignItems='center'\n                justifyContent='space-between'\n                className={style.headerInfo}\n            >\n                {/* <FontAwesomeIcon\n                    className={classnames(style.back, {\n                        [style.hideLeftIcon]:\n                            location.pathname === `/${RouteLink.Index}`,\n                    })}\n                    icon='chevron-left'\n                    onClick={handleBack}\n                /> */}\n                <FontAwesomeIcon\n                    icon={isShowX ? 'times' : 'bars'}\n                    className={classnames(style.bars, {\n                        [style.hideBars]:\n                            !location.pathname.includes('/feature/article'),\n                    })}\n                    onClick={handleOpenDirectoryOnlyArticle}\n                />\n                <Text className={style.title} onClick={handleClickTitle}>\n                    青芽\n                </Text>\n                <FontAwesomeIcon\n                    className={style.themeIcon}\n                    icon={theme === 'light' ? faSun : faMoon}\n                    onClick={handleToggleTheme(theme)}\n                />\n            </Direction>\n\n            {/* 暂时不需要 Index Type Mood About 这些 */}\n            {/*  <Direction>\n                <Navigation\n                    data={navigationData}\n                    className={style.navigation}\n                />\n            </Direction> */}\n        </div>\n    )\n}\n\nexport default memo(Header)\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Layout } from 'antd'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n    faLinkedin,\n    faTwitterSquare,\n    faYoutubeSquare,\n    faFacebookSquare,\n} from '@fortawesome/free-brands-svg-icons'\n\nimport IndexedDB from '~/packages/y-indexeddb'\n\nimport style from './index.less'\nimport { storage } from './utils'\nimport Footer from './layouts/footer'\nimport { Sidebar } from './component'\nimport Header from './layouts/header'\nimport { ThemeProvider } from './contexts'\nimport { LOCAL_STORAGE_NAME } from './utils/constant'\nimport request from './utils/request'\n\n// 添加 fontawesome 免费版: https://fontawesome.com/search?q=menu&o=r&m=free\nlibrary.add(fas, faFacebookSquare, faYoutubeSquare, faLinkedin, faTwitterSquare)\n\n// 初始化 IndexedDB\nIndexedDB.singleInstance.open({\n    dbName: 'yomuaDB',\n    dbVersion: 1,\n    dbStoreName: 'yomua',\n    specifyKey: 'filepath',\n})\n\nconst Index = (props: { children: React.ReactNode }) => {\n    const [theme, setTheme] = useState<Theme>('light')\n\n    const handleChangeTheme = useCallback((theme: Theme) => {\n        setTheme(theme)\n    }, [])\n\n    useEffect(() => {\n        const html = document.querySelector('html')\n\n        if (!html) {\n            return\n        }\n\n        html.setAttribute(LOCAL_STORAGE_NAME.DATA_THEME, theme)\n    }, [theme])\n\n    // 恢复用户上一次选择的主题\n    useEffect(() => {\n        const localTheme = storage.getLocalStorage<'string', Theme>(\n            LOCAL_STORAGE_NAME.DATA_THEME,\n        )\n\n        if (localTheme) {\n            setTheme(localTheme)\n        }\n    }, [])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Layout className={style.layout}>\n                <Header theme={theme} onToggleTheme={handleChangeTheme} />\n\n                <Layout.Content className={style.content}>\n                    <Sidebar />\n                    {props.children}\n                </Layout.Content>\n\n                {/* <Footer /> */}\n            </Layout>\n        </ThemeProvider>\n    )\n}\n\nexport default Index\n"],"sourceRoot":""}