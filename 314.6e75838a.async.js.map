{"version":3,"sources":["webpack:///./src/base_component/direction/index.less","webpack:///./src/base_component/text/index.less","webpack:///./src/component/card/index.less","webpack:///./src/component/markdown/index.less","webpack:///./src/component/sidebar/index.less","webpack:///./packages/y-screw/debounce.ts","webpack:///./packages/y-hooks/src/useWindowEventListener/index.ts","webpack:///./packages/y-screw/get-type.ts","webpack:///./src/base_component/text/index.tsx","webpack:///./src/base_component/direction/index.tsx","webpack:///./src/component/card/index.tsx","webpack:///./src/component/sidebar/index.tsx","webpack:///./src/component/markdown/index.tsx","webpack:///./src/contexts/theme.tsx","webpack:///./src/hooks/use_theme.ts","webpack:///./src/utils/constant.ts","webpack:///./src/utils/index.ts","webpack:///./src/utils/log.ts","webpack:///./src/utils/request.ts"],"names":["module","exports","preventRefreshItselfTimer","fn","delay","option","timer","isRefreshItself","preventRefreshItself","rest","clearTimeout","setTimeout","apply","DEFAULT_OPTIONS","useWindowEventListener","eventName","listenCallback","effect","options","useEffect","window","addEventListener","debounce","removeEventListener","getType","data","type","Object","prototype","toString","call","replace","r","toLowerCase","Text","props","className","otherProps","theme","useTheme","textClassName","classnames","style","children","memo","Direction","mode","alignItems","justifyContent","gap","undefined","CustomCard","img","previewImg","time","description","title","author","tag","lastUpdateTime","cardProps","useState","visible","setVisible","handleClickImage","useCallback","event","stopPropagation","bordered","hoverable","src","preview","onClick","icon","maxHeight","map","index","name","key","color","invertColor","marginRight","maskClosable","onVisibleChange","vis","Sidebar","isShowSidebar","setIsShowSidebar","prevScrollPosition","useRef","document","documentElement","scrollTop","handleTop","preventDefault","currentLocation","slider","scrollTo","SCROLL_SPEED","isNaN","log","sub","message","requestAnimationFrame","target","Document","isDownScroll","current","Markdown","remarkPlugins","remarkGfm","rehypePlugins","rehypeRaw","ordered","headingTopOffset","source","ThemeContext","createContext","ThemeProvider","Provider","value","useContext","CONVERT_TYPE_MAP","string","number","Number","boolean","null","bigInt","BigInt","symbol","Symbol","object","JSON","parse","error","array","function","eval","currentWorkingDir","process","cwd","ENV_KEY","Dotenv","path","getEnvValue","envKey","returnType","converter","Error","RouteName","RouteLink","LOCAL_STORAGE_NAME","EVENT_EMITTER_NAME","ARTICLE_SUFFIX_NAME","ARTICLE_DIR","ARTICLE_PICtURE","WRITE_ARTICLE_DIR","Promise","resolve","colorValue","str","substring","length","createFileTree","dirData","parentPath","fileTree","entries","fullPath","isObject","subTree","push","minDelayTime","startTime","Date","now","endTime","get404Md","request","then","res","success","LOG_COLOR_MAP","info","logo","trace","logoGroup","console","group","forEach","item","groupEnd","interceptorsMap","response","interceptors","use","onFulfilled","onRejected","checkResponse","status","statusText","handleResponse","contentType","headers","get","newResponse","includes","json","text","handleResult","result","handleError","url","params","queryString","reset","Accept","keys","Array","isArray","join","fetch","catch"],"mappings":"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","file":"314.6e75838a.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"row___1UdcL\",\"column\":\"column___3S6qx\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___2PnqU\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___20OLN\",\"textOverflowEllipsis\":\"textOverflowEllipsis___1u-a9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"text___eH7ih\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___15Z7m\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___1RylG\",\"textOverflowEllipsis\":\"textOverflowEllipsis___eiNMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-light\":\"card-light___wL7zL\",\"card-dark\":\"card-dark___33apU\",\"card\":\"card___1Aqfk\",\"image\":\"image___3g604\",\"content\":\"content___3lENv\",\"title\":\"title___2Bzk-\",\"description\":\"description___2ORSX\",\"info\":\"info___2_m7q\",\"author\":\"author___2emhg\",\"time\":\"time___YsVpW\",\"tags\":\"tags___hmLww\",\"tag\":\"tag____Lyfk\",\"preview\":\"preview___1DC83\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___1MBBn\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___shsM8\",\"textOverflowEllipsis\":\"textOverflowEllipsis___2KB4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdown\":\"markdown___3CFfF\",\"markNavbarBox\":\"markNavbarBox___2ojCW\",\"markNavbar\":\"markNavbar___3drcn\",\"markdownBodyBox\":\"markdownBodyBox___2SJQO\",\"markdownBody\":\"markdownBody___1GIBf\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___3vgbL\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___2qoug\",\"textOverflowEllipsis\":\"textOverflowEllipsis___3lTmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar-light\":\"sidebar-light___ctrWB\",\"sidebar-dark\":\"sidebar-dark___1CwDu\",\"sidebar\":\"sidebar___2Jc5u\",\"sidebarHide\":\"sidebarHide___2pkhV\",\"goTop\":\"goTop___2L6MT\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___nCEGx\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___2BFqe\",\"textOverflowEllipsis\":\"textOverflowEllipsis___XwSfv\"};","/** 将 timer 写在外面的好处:\n * 当 debounce 被反复刷新时，仍可以保证 fn 能被防抖\n * 即：如果 debounce 函数写在 React 组件内部，当 React 组件刷新时，可能会重新执行 debounce 函数，\n * 此时如果没有做 [防止重复刷新] 操作，则 fn 将不会被防抖，因为此时相当于重新创建了一个作用域，生成了新的 setTimeout 和新的 fn,\n * 它们和之前的 setTimeout, fn 没有关联。\n */\nlet preventRefreshItselfTimer: NodeJS.Timeout\n\nexport default <T = () => void>(\n    fn: T,\n    delay: number,\n    option?: {\n        isRefreshItself?: boolean\n    },\n) => {\n    const { isRefreshItself = false } = option ?? {}\n\n    let timer: NodeJS.Timeout\n\n    function preventRefreshItself(...rest) {\n        if (preventRefreshItselfTimer) {\n            clearTimeout(preventRefreshItselfTimer)\n        }\n\n        preventRefreshItselfTimer = setTimeout(() => {\n            if (typeof fn === 'function') {\n                // 使用 fn 作为 this\n                fn.apply(fn, rest)\n            }\n        }, delay)\n    }\n\n    if (isRefreshItself) {\n        return preventRefreshItself\n    }\n\n    return function (...rest) {\n        if (timer) {\n            clearTimeout(timer)\n        }\n\n        timer = setTimeout(() => {\n            if (typeof fn === 'function') {\n                fn.apply(fn, rest)\n            }\n        }, delay)\n    }\n}\n","import React, { useEffect } from 'react'\nimport { debounce } from '~/packages/y-screw'\n\nimport { Options } from './index.d'\n\nconst DEFAULT_OPTIONS = {\n    delay: 0,\n}\n\n// 此 hook 的监听器将被防抖\nexport default function useWindowEventListener(\n    eventName: string,\n    listenCallback: EventListenerOrEventListenerObject,\n    effect?: React.DependencyList,\n    options: Options = DEFAULT_OPTIONS,\n) {\n    if (!eventName) {\n        return\n    }\n\n    const { delay = 0, isRefreshItself = false } = options\n\n    useEffect(() => {\n        window.addEventListener(\n            eventName,\n            debounce(listenCallback, delay, { isRefreshItself }),\n        )\n\n        return () => {\n            window.removeEventListener(\n                eventName,\n                debounce(listenCallback, delay, { isRefreshItself }),\n            )\n        }\n    }, effect)\n}\n","export type JSValueType =\n    | 'string'\n    | 'number'\n    | 'boolean'\n    | 'null'\n    | 'undefined'\n    | 'bigInt'\n    | 'symbol'\n    | 'object'\n    | 'array'\n    | 'function'\n\nexport default function getType<T>(data: T):\n    | 'string' // 这样写类型, 能直接使用时看到\n    | 'number'\n    | 'boolean'\n    | 'null'\n    | 'undefined'\n    | 'bigInt'\n    | 'symbol'\n    | 'object'\n    | 'array'\n    | 'function' {\n    const type = Object.prototype.toString\n        .call(data)\n        .replace(/\\[?\\]?/g, '') // 'object String'\n        .replace('object ', '') // String\n        .replace(/\\w/, (r) => r.toLowerCase()) as JSValueType // string\n\n    return type\n}\n","import React, { memo } from 'react'\nimport classnames from '@yomua/y-classnames'\n\nimport { useTheme } from '@/hooks'\n\nimport style from './index.less'\n\ntype Text = React.ClassAttributes<HTMLDivElement> &\n    React.HTMLAttributes<HTMLDivElement>\n\ninterface TextProps extends Text {\n    children?: React.ReactNode\n    className?: string\n}\n\nconst Text = (props: TextProps) => {\n    const { className = '', ...otherProps } = props\n\n    const theme = useTheme()\n\n    const textClassName = classnames(style.text, className, {\n        [style[`text-${theme}`]]: theme,\n    })\n\n    return (\n        <div className={textClassName} {...otherProps}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default memo(Text)\n","import React, { memo } from 'react'\nimport classnames from '@yomua/y-classnames'\n\nimport style from './index.less'\n\ntype Div = React.ClassAttributes<HTMLDivElement> &\n    React.HTMLAttributes<HTMLDivElement>\n\ninterface DirectionProps extends Div {\n    gap?: number\n    className?: string\n    mode?: 'row' | 'column'\n    children?: React.ReactNode\n    alignItems?: 'center' | 'space-between'\n    justifyContent?: 'center' | 'space-between'\n}\n\nconst Direction = (props: DirectionProps) => {\n    const {\n        children,\n        mode = 'row',\n        className = '',\n        alignItems,\n        justifyContent,\n        gap,\n        ...otherProps\n    } = props\n\n    return (\n        <div\n            className={classnames(style[mode], className)}\n            style={{\n                justifyContent,\n                alignItems,\n                gap: gap ? `${gap}px` : undefined,\n            }}\n            {...otherProps}\n        >\n            {children}\n        </div>\n    )\n}\n\nexport default memo(Direction)\n","import { memo, useState, useCallback } from 'react'\nimport classnames from '@yomua/y-classnames'\nimport { Tag, Card, Image, CardProps } from 'antd'\nimport { Scrollbars } from 'react-custom-scrollbars-2'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { useTheme } from '@/hooks'\nimport { invertColor } from '@/utils'\n\nimport { Text } from '@/base_component'\n\nimport style from './index.less'\n\ninterface CustomProps extends CardProps {\n    img?: string\n    time?: string\n    title?: string\n    author?: string\n    previewImg?: string\n    description?: string\n    lastUpdateTime?: string\n    tag?: {\n        name: string\n        key?: string\n        color?: string\n        icon?: IconProp\n    }[]\n}\n\nconst CustomCard = (props: CustomProps) => {\n    const {\n        img,\n        previewImg,\n        time,\n        description,\n        title,\n        author,\n        className,\n        tag = [],\n        lastUpdateTime,\n        ...cardProps\n    } = props\n\n    const [visible, setVisible] = useState(false)\n\n    const theme = useTheme()\n\n    const handleClickImage = useCallback(\n        (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n            setVisible(true)\n            event.stopPropagation()\n        },\n        [],\n    )\n\n    return (\n        <div className={style.cardBox}>\n            <Card\n                bordered\n                hoverable\n                className={classnames(\n                    style.card,\n                    style[`card-${theme}`],\n                    className,\n                )}\n                {...cardProps}\n            >\n                <Image\n                    src={img}\n                    className={style.image}\n                    preview={{ visible: false }}\n                    onClick={handleClickImage}\n                />\n\n                <div className={style.content}>\n                    <Text className={style.title}>{title}</Text>\n\n                    <Text className={style.description}>{description}</Text>\n\n                    <div className={style.info}>\n                        <div>\n                            <FontAwesomeIcon\n                                icon='user'\n                                className={style.author}\n                            />\n                            <Text>{author}</Text>\n                        </div>\n                        <div>\n                            <FontAwesomeIcon\n                                icon='clock'\n                                className={style.time}\n                            />\n                            <Text>{time}</Text>\n                        </div>\n                    </div>\n\n                    {lastUpdateTime && (\n                        <div className={style.info}>\n                            <div>\n                                <FontAwesomeIcon icon='clock' />\n                                <Text>最后更新时间: </Text>\n                            </div>\n                            <div>\n                                <Text>{lastUpdateTime}</Text>\n                            </div>\n                        </div>\n                    )}\n\n                    <Scrollbars style={{ maxHeight: 55 }}>\n                        <div className={style.tags}>\n                            {tag.map((tag, index) => {\n                                const { name, key, icon, color } = tag\n\n                                return (\n                                    <Tag\n                                        className={style.tag}\n                                        key={key ?? index}\n                                        color={\n                                            theme === 'light'\n                                                ? color\n                                                : invertColor(\n                                                      color ?? '#55acee',\n                                                  )\n                                        }\n                                        icon={\n                                            icon ? (\n                                                <FontAwesomeIcon\n                                                    icon={icon}\n                                                    style={{\n                                                        marginRight: '5px',\n                                                    }}\n                                                />\n                                            ) : null\n                                        }\n                                    >\n                                        {name}\n                                    </Tag>\n                                )\n                            })}\n                        </div>\n                    </Scrollbars>\n                </div>\n            </Card>\n\n            <div className={style.preview}>\n                <Image.PreviewGroup\n                    preview={{\n                        visible,\n                        maskClosable: false,\n                        onVisibleChange: (vis) => setVisible(vis),\n                    }}\n                >\n                    <Image src={previewImg} />\n                </Image.PreviewGroup>\n            </div>\n        </div>\n    )\n}\n\nexport default memo(CustomCard)\n","import { memo, useCallback, useState, useRef } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { getType } from '~/packages/y-screw'\nimport classnames from '@yomua/y-classnames'\nimport { useWindowEventListener } from '~/packages/y-hooks'\n\nimport log from '@/utils/log'\nimport { useTheme } from '@/hooks'\nimport { SCROLL_SPEED } from '@/utils/constant'\n\nimport style from './index.less'\n\nfunction Sidebar() {\n    const [isShowSidebar, setIsShowSidebar] = useState(false)\n\n    const theme = useTheme()\n\n    const prevScrollPosition = useRef(document.documentElement.scrollTop)\n\n    const handleTop: React.MouseEventHandler<SVGSVGElement> = useCallback(\n        (event) => {\n            event.preventDefault()\n\n            let currentLocation = document.documentElement.scrollTop\n\n            function slider() {\n                if (currentLocation < 0) {\n                    window.scrollTo(0, 0)\n                    return\n                }\n\n                if (getType(SCROLL_SPEED) !== 'number' || isNaN(SCROLL_SPEED)) {\n                    log.group('SCROLL_SPEED ERROR', {\n                        sub: [\n                            { type: 'info', message: SCROLL_SPEED },\n                            { type: 'trace', message: 'trace' },\n                        ],\n                    })\n                    window.scrollTo(0, 0)\n                    return\n                }\n\n                currentLocation -= SCROLL_SPEED\n                window.scrollTo(0, currentLocation)\n                window.requestAnimationFrame(slider)\n            }\n\n            slider()\n        },\n        [],\n    )\n\n    useWindowEventListener(\n        'scroll',\n        (event) => {\n            if (!(event.target instanceof Document)) {\n                return\n            }\n\n            const { scrollTop = 0 } = event?.target?.documentElement ?? {\n                scrollTop: 0,\n            }\n\n            // 往下滚动\n            const isDownScroll = scrollTop > prevScrollPosition.current\n\n            if (scrollTop === 0 || isDownScroll) {\n                setIsShowSidebar(false)\n                prevScrollPosition.current = scrollTop\n                return\n            }\n\n            // 此处相当于往上滚动, 则显示 sidebar\n            prevScrollPosition.current = scrollTop\n            setIsShowSidebar(true)\n        },\n        [],\n        { delay: 100 },\n    )\n\n    return (\n        <div\n            className={classnames(style.sidebar, style[`sidebar-${theme}`], {\n                [style.sidebarHide]: !isShowSidebar,\n            })}\n        >\n            <FontAwesomeIcon\n                icon='circle-chevron-up'\n                className={style.goTop}\n                onClick={handleTop}\n            />\n        </div>\n    )\n}\n\nexport default memo(Sidebar)\n","/* eslint-disable react/no-children-prop */\nimport { memo } from 'react'\nimport 'github-markdown-css'\nimport remarkGfm from 'remark-gfm'\nimport rehypeRaw from 'rehype-raw'\nimport MarkNavbar from 'markdown-navbar'\nimport ReactMarkdown from 'react-markdown'\nimport classnames from '@yomua/y-classnames'\n\nimport { useTheme } from '@/hooks'\n\nimport './base.css'\nimport './index.less'\nimport './markdown.css'\nimport style from './index.less'\n\ntype MarkdownProps = {\n    children: React.ReactNode | string\n    className?: string\n}\n\nconst Markdown = (props: MarkdownProps) => {\n    const { className = '', children } = props\n    const theme = useTheme()\n\n    return (\n        <div\n            className={classnames(\n                style.markdown,\n                style.increaseWeight,\n                {\n                    [`markdown-${theme}`]: theme,\n                },\n                className,\n            )}\n        >\n            <div\n                className={classnames(\n                    'markdown-body-box',\n                    style.markdownBodyBox,\n                )}\n            >\n                <ReactMarkdown\n                    // markdown-body 是导入 github-markdown-css\n                    className={classnames('markdown-body', style.markdownBody)}\n                    children={children as string}\n                    // 即使手动引入了 markdown.css 这两个也有用, 至少表格相关的样式需要。\n                    remarkPlugins={[remarkGfm]}\n                    // 这个不会影响到表格样式，但可能会影响其他样式，所以保留\n                    rehypePlugins={[rehypeRaw]}\n                />\n            </div>\n\n            <div\n                className={classnames(\n                    'markdown-navbar-box',\n                    style.markNavbarBox,\n                )}\n            >\n                <MarkNavbar\n                    className={style.markNavbar}\n                    ordered={false}\n                    headingTopOffset={40}\n                    source={children}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default memo(Markdown)\n","import React, { createContext } from 'react'\n\ninterface ThemeProviderProps {\n    theme: Theme\n    children: React.ReactNode\n}\n\nexport const ThemeContext = createContext('light')\n\nconst ThemeProvider = (props: ThemeProviderProps) => {\n    const { theme } = props\n\n    return (\n        <ThemeContext.Provider value={theme}>\n            {props.children}\n        </ThemeContext.Provider>\n    )\n}\n\nexport default ThemeProvider\n","import { useContext } from 'react'\n\nimport { ThemeContext } from '@/contexts'\n\nexport default function useTheme() {\n    return useContext(ThemeContext) as Theme\n}\n","import path from 'path'\nimport Dotenv from 'dotenv'\n\nimport log from './log'\nimport { EnvValueType, JSValueType } from './utils.d'\n\nexport const CONVERT_TYPE_MAP: Record<\n    JSValueType,\n    (value: string) => EnvValueType<JSValueType>\n> = {\n    string: (value) => value,\n    number: (value) => Number(value),\n    boolean: (value) => value.toLowerCase() === 'true',\n    null: () => null,\n    undefined: () => undefined,\n    bigInt: (value) => BigInt(value),\n    symbol: (value) => Symbol(value),\n    object: (value) => {\n        try {\n            return JSON.parse(value)\n        } catch (error) {\n            log.group('JSON.parse 失败', {\n                sub: [\n                    { type: 'error', message: error },\n                    {\n                        type: 'log',\n                        message: `要解析的值为: ${\n                            value === '' ? '空字符串' : value\n                        }`,\n                    },\n                ],\n            })\n            return null\n        }\n    },\n    array: (value) => {\n        try {\n            return JSON.parse(value)\n        } catch (error) {\n            log.group('JSON.parse 失败', {\n                sub: [\n                    { type: 'error', message: error },\n                    {\n                        type: 'log',\n                        message: `要解析的值为: ${\n                            value === '' ? '空字符串' : value\n                        }`,\n                    },\n                ],\n            })\n\n            return null\n        }\n    },\n    function: (value) => eval(`(${value})`),\n}\n\n// 这里的目的是因为: constants 存在打包之前就需要的 process.env 中的变量\n// 所以需要在这里提前注入环境变量\nconst currentWorkingDir = process.cwd()\nDotenv.config({ path: path.join(currentWorkingDir, '.env') })\n\n/** 以下不需要导出，用在此文件 */\n\nenum ENV_KEY {\n    SCROLL_SPEED = 'SCROLL_SPEED',\n    ARTICLE_DIR = 'ARTICLE_DIR',\n    WRITE_ARTICLE_DIR = 'WRITE_ARTICLE_DIR',\n    ARTICLE_PICtURE = 'ARTICLE_PICtURE',\n    ARTICLE_SUFFIX_NAME = 'ARTICLE_SUFFIX_NAME',\n}\n\nconst getEnvValue = <ReturnType extends JSValueType = 'string'>(\n    envKey: ENV_KEY,\n    options?: {\n        returnType?: ReturnType\n    },\n): EnvValueType<ReturnType> => {\n    if (envKey === undefined || envKey === null) {\n        return null as EnvValueType<ReturnType>\n    }\n\n    const { returnType = 'string' } = options ?? {}\n\n    const converter = CONVERT_TYPE_MAP[returnType]\n\n    if (!converter) {\n        throw new Error('类型不存在')\n    }\n\n    return converter(process.env[envKey] ?? '') as EnvValueType<ReturnType>\n}\n\n/** 以上不需要导出，用在此文件 */\n\nexport enum RouteName {\n    Index = '首页',\n    Type = '分类',\n    Mood = '心情',\n    About = '关于',\n}\n\nexport enum RouteLink {\n    Index = 'index',\n    Type = 'type',\n    Mood = 'mood',\n    About = 'about',\n}\n\nexport enum LOCAL_STORAGE_NAME {\n    SELECTED_ARTICLE_KEY = 'selectedArticleKey',\n    ARTICLE_FILE_PATH = 'activeFilePath',\n    ARTICLE_TREE_EXPANDED_KEYS = 'articleTreeExpandedKeys',\n    DATA_THEME = 'data-theme',\n    GPT3_CHAT_INFORMATION = 'gpt3_chat_information',\n}\n\n// 所有自定义事件名\nexport enum EVENT_EMITTER_NAME {\n    // 只有当视区内只显示文章时，此事件才会被监听和触发。\n    OPEN_ARTICLE_DIRECTORY = 'openArticleDirectoryOnlyArticle',\n    SHOW_HEADER_X = 'showHeaderX',\n}\n\n/************************* 以下都是 .env 中的变量值 *************************/\n\nexport const SCROLL_SPEED = getEnvValue(ENV_KEY.SCROLL_SPEED, {\n    returnType: 'number',\n})\n\n/** 以下变量即用于打包之前, 也用于打包后的运行时 */\n\nexport const ARTICLE_SUFFIX_NAME = getEnvValue(ENV_KEY.ARTICLE_SUFFIX_NAME)\n\n/** 以上变量即用于打包之前, 也用于打包后的运行时 */\n\n/** 以下变量用于打包之前的准备 */\n\nexport const ARTICLE_DIR = getEnvValue(ENV_KEY.ARTICLE_DIR)\n\nexport const ARTICLE_PICtURE = getEnvValue(ENV_KEY.ARTICLE_PICtURE)\n\nexport const WRITE_ARTICLE_DIR = getEnvValue(ENV_KEY.WRITE_ARTICLE_DIR)\n\n/** 以上变量用于打包之前的准备 */\n\n/************************* 以上都是 .env 中的变量值 *************************/\n","/* eslint-disable no-use-before-define */\n\nimport { getType } from '~/packages/y-screw'\n\nimport request from './request'\n\n/** start --- 不需要导出 --- start */\ntype DirData = {\n    [fileName: string]: string | DirData\n}\n/** end --- 不需要导出 --- end */\n\nexport const delay = async (time: number) =>\n    new Promise((resolve) => setTimeout(resolve, time))\n\nexport const invertColor = (color: string) => {\n    const colorValue: any = '0x' + color.replace(/#/g, '')\n    const str = '000000' + (0xffffff - colorValue).toString(16)\n    return '#' + str.substring(str.length - 6, str.length)\n}\n\nexport const createFileTree = (\n    dirData: DirData,\n    options?: {\n        parentPath?: string\n    },\n) => {\n    if (getType(dirData) !== 'object') return []\n\n    const { parentPath = '' } = options ?? {}\n\n    type FileTree = {\n        type: 'file' | 'directory'\n        title: string\n        path: string\n        key: string\n        children?: FileTree[] // when directory\n    }\n\n    const fileTree: FileTree[] = []\n\n    for (const [title, value] of Object.entries(dirData)) {\n        const fullPath = parentPath ? `${parentPath}/${title}` : title\n\n        const isObject = getType(value) === 'object'\n\n        if (isObject) {\n            const subTree = createFileTree(value as DirData, {\n                parentPath: fullPath,\n            })\n            fileTree.push({\n                type: 'directory',\n                title,\n                key: fullPath,\n                path: fullPath,\n                children: subTree,\n            })\n        } else {\n            const path = value as string\n\n            fileTree.push({\n                type: 'file',\n                title,\n                key: path,\n                path: path,\n            })\n        }\n    }\n\n    return fileTree\n}\n\nexport const compressImg = (imgPath: string) => {\n    const img = new Image()\n    const canvas = document.createElement('canvas')\n    const context = canvas.getContext('2d')\n    img.src = imgPath\n    img.onload = function () {\n        // 图片原始尺寸\n        const originWidth = (this as any).width\n        const originHeight = (this as any).height\n        // 最大尺寸限制\n        const maxWidth = 400,\n            maxHeight = 400\n        // 目标尺寸\n        let targetWidth = originWidth,\n            targetHeight = originHeight\n        // 图片尺寸超过400x400的限制\n        if (originWidth > maxWidth || originHeight > maxHeight) {\n            if (originWidth / originHeight > maxWidth / maxHeight) {\n                // 更宽，按照宽度限定尺寸\n                targetWidth = maxWidth\n                targetHeight = Math.round(\n                    maxWidth * (originHeight / originWidth),\n                )\n            } else {\n                targetHeight = maxHeight\n                targetWidth = Math.round(\n                    maxHeight * (originWidth / originHeight),\n                )\n            }\n        }\n\n        // canvas对图片进行缩放\n        canvas.width = targetWidth\n        canvas.height = targetHeight\n        // 清除画布\n        context?.clearRect(0, 0, targetWidth, targetHeight)\n        // 图片压缩\n        context?.drawImage(img, 0, 0, targetWidth, targetHeight)\n    }\n}\n\n/**\n * 延迟执行代码以确保最小延迟时间的函数。\n *\n * @param {number} startTime - 函数执行的开始时间（以毫秒为单位）。\n * @param {number} endTime - 函数执行的结束时间（以毫秒为单位）。\n * @param {number} minDelayTime - 最小延迟时间（以毫秒为单位）。\n * @return {Promise<void>}\n */\nexport async function minDelayTime(\n    startTime = Date.now(),\n    endTime = Date.now(),\n    minDelayTime = 500,\n) {\n    if (endTime - startTime < minDelayTime) {\n        await delay(minDelayTime - (endTime - startTime))\n    }\n\n    return\n}\n\nexport const get404Md = async () => {\n    return request('/article/404.md').then((res) => {\n        const { data, success } = res\n\n        if (!success || !data) {\n            return '# 404'\n        }\n\n        return data as string\n    })\n}\n","const LOG_COLOR_MAP = {\n    error: 'color: #fff; background-color: #f00',\n    info: 'color: #fff; background-color: #00f',\n    logo: 'color: #fff; background-color: #000',\n    trace: 'color: #000; background-color: #fff',\n}\n\nconst logoGroup = (\n    title: string,\n    options: {\n        sub: {\n            type: 'error' | 'info' | 'log' | 'trace'\n            message: string | Error | unknown\n        }[]\n    },\n) => {\n    const { sub = [] } = options ?? {}\n\n    console.group(`%c${title}`, 'color: #fff; background-color: #000')\n\n    sub.forEach((item) => {\n        const { type, message } = item\n\n        console[type](`%c${message}`, LOG_COLOR_MAP[type])\n    })\n\n    console.groupEnd()\n}\n\nexport default {\n    ...console,\n    group: logoGroup,\n}\n","import log from './log'\n\ntype RequestOptions = {\n    // 添加到 url 后: https://test.com?test=test\n    queryString?: Record<string, string | string[]>\n}\n\ntype RequestOnFulfilled = (config: RequestInit) => RequestInit\ntype RequestOnRejected = (error: Error) => Error\n\ntype ResponseOnFulfilled<V> = (response: Response) => V | Promise<V>\ntype ResponseOnRejected = (error: Error) => Error\n\ntype RequestInterceptors = {\n    request?: {\n        onFulfilled?: RequestOnFulfilled\n        onRejected?: RequestOnRejected\n    }[]\n    response?: {\n        onFulfilled?: ResponseOnFulfilled<any>\n        onRejected?: ResponseOnRejected\n    }[]\n}\n\n// 将拦截器存到全局内存中.\nconst interceptorsMap: RequestInterceptors = {\n    request: [],\n    response: [],\n}\n\n// 拦截器函数\nconst interceptors = {\n    request: {\n        // 添加拦截器到内存中\n        use: function (\n            onFulfilled?: RequestOnFulfilled,\n            onRejected?: RequestOnRejected,\n        ) {\n            interceptorsMap.request?.push({\n                onFulfilled,\n                onRejected,\n            })\n        },\n    },\n    response: {\n        use: function (\n            onFulfilled?: ResponseOnFulfilled<any>,\n            onRejected?: ResponseOnRejected,\n        ) {\n            interceptorsMap.response?.push({\n                onFulfilled,\n                onRejected,\n            })\n        },\n    },\n}\n\nconst checkResponse = (response: Response) => {\n    const { status, statusText } = response\n\n    if (status >= 200 && status < 300) {\n        return response\n    }\n\n    const error = new Error(statusText)\n\n    throw error\n}\n\nconst handleResponse = (response: Response) => {\n    const contentType = response.headers.get('content-type')\n\n    let newResponse: Response | Promise<Response> | null = null\n\n    interceptorsMap.response?.forEach(({ onFulfilled }) => {\n        if (onFulfilled) {\n            newResponse = onFulfilled(response)\n        }\n    })\n\n    if (contentType && contentType.includes('application/json')) {\n        return newResponse ?? response.json()\n    } else {\n        return newResponse ?? response.text()\n    }\n}\n\nconst handleResult = <R>(result: R) => {\n    return {\n        error: null,\n        data: result,\n        success: true,\n    }\n}\n\nconst handleError = (error: Error) => {\n    log.error('Request Error: ', error)\n\n    interceptorsMap.response?.forEach(({ onRejected }) => {\n        if (onRejected) {\n            onRejected(error)\n        }\n    })\n\n    throw error\n}\n\nasync function request<Result = any>(\n    url: string,\n    params?: RequestInit & RequestOptions,\n): Promise<{\n    data: Result\n    success: boolean\n    error: Error | null\n}> {\n    const { queryString, ...reset } = params ?? {}\n\n    const headers: Record<string, string> = {\n        Accept: '*/*',\n        ...((params?.headers as Record<string, string>) ?? {}),\n    }\n\n    // queryString: ?a=1&a=2&b=3\n    if (queryString) {\n        url += `?${Object.keys(queryString)\n            .map((key) => {\n                const value = queryString[key]\n                // 如果是数组 => a=1&a=2\n                if (Array.isArray(value)) {\n                    let result = ''\n                    value.forEach((item) => {\n                        result += `${key}=${item}&`\n                    })\n\n                    // 删除最后个 &\n                    return result.replace(/&$/, '')\n                }\n\n                return `${key}=${value}`\n            })\n            .join('&')}`\n    }\n\n    let options: RequestInit = {\n        ...reset,\n        headers,\n    }\n\n    // 调用请求拦截\n    interceptorsMap.request?.forEach(async ({ onFulfilled, onRejected }) => {\n        if (onFulfilled) {\n            options = onFulfilled(options)\n        }\n    })\n\n    return fetch(url, options)\n        .then(checkResponse)\n        .then(handleResponse)\n        .then(handleResult)\n        .catch(handleError)\n}\n\nrequest.interceptors = interceptors\n\nexport default request\n"],"sourceRoot":""}