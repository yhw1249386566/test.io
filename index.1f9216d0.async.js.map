{"version":3,"sources":["webpack:///./src/index.less","webpack:///./src/layouts/footer/index.less","webpack:///./src/layouts/header/index.less","webpack:///./packages/indexed-db/index.ts","webpack:///./src/constant.ts","webpack:///./src/layouts/footer/index.tsx","webpack:///./src/layouts/header/index.tsx","webpack:///./src/index.tsx"],"names":["module","exports","IndexedDBSymbol","Symbol","IndexedDB","constructor","symbol","db","dbName","dbVersion","dbStoreName","specifyKey","Error","this","singleInstance","indexedDBInstance","getObjectStore","mode","transaction","sessionStorage","setItem","JSON","stringify","location","reload","console","info","objectStore","open","options","req","window","indexedDB","onupgradeneeded","event","store","currentTarget","result","createObjectStore","keyPath","autoIncrement","createIndex","unique","onsuccess","getDataFromStore","filepath","index","get","addDataFromStore","data","add","deleteDataFromStore","id","target","delete","updateDataFromStore","updateData","allRequest","getAll","allData","dataToUpdate","find","value","put","file","clearDataFromStore","clear","RouteName","RouteLink","Footer","theme","useTheme","className","classnames","style","memo","Header","props","onToggleTheme","history","useHistory","useLocation","handleClickTitle","useCallback","push","handleToggleTheme","handleBack","goBack","alignItems","justifyContent","pathname","icon","onClick","faSun","faMoon","library","fas","faFacebookSquare","faYoutubeSquare","faLinkedin","faTwitterSquare","Index","useState","setTheme","handleChangeTheme","useEffect","html","document","querySelector","setAttribute","children"],"mappings":"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","file":"index.1f9216d0.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"content___3-pTm\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___21_uB\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___3QJyU\",\"textOverflowEllipsis\":\"textOverflowEllipsis___1wr59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer-light\":\"footer-light___19VFF\",\"footer-dark\":\"footer-dark___3SyCX\",\"footer\":\"footer___3sK6W\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___1toOz\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___ewZud\",\"textOverflowEllipsis\":\"textOverflowEllipsis___1MAII\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-light\":\"header-light___3cGmx\",\"header-dark\":\"header-dark___pcRuq\",\"header\":\"header___2O2lm\",\"headerInfo\":\"headerInfo___25wHO\",\"back\":\"back___FsmmO\",\"themeIcon\":\"themeIcon___q2Qkx\",\"hideLeftIcon\":\"hideLeftIcon___L5pJo\",\"title\":\"title___a0WaH\",\"navigation\":\"navigation___3mfr-\",\"absoluteHorizontalVerticalCenter\":\"absoluteHorizontalVerticalCenter___2C_vn\",\"marginHorizontalVerticalCenter\":\"marginHorizontalVerticalCenter___scs3c\",\"textOverflowEllipsis\":\"textOverflowEllipsis___PsGMq\"};","type Data = { filepath: string; file: string }\n\nconst IndexedDBSymbol = Symbol()\n\nclass IndexedDB {\n    /* eslint-disable no-use-before-define */\n    static indexedDBInstance: IndexedDB\n    /* eslint-disable no-use-before-define */\n    private db: IDBDatabase\n    private dbName: string\n    private dbVersion: number\n    private dbStoreName: string\n    private specifyKey: string\n\n    constructor(symbol?: symbol) {\n        /**\n         * 以下方法允许开发者即使多次使用 new 也能创建单实例\n         * 坏处是：用户不能创建多实例了，由于这是一个 package\n         * 所以不使用此方法，而是提供 singleInstance 让用户选择单实例或多实例（多次 new）\n         */\n        // if (IndexedDB.indexedDBInstance) {\n        //     return IndexedDB.indexedDBInstance\n        // }\n        // IndexedDB.indexedDBInstance = this\n\n        if (symbol && symbol !== IndexedDBSymbol) {\n            throw new Error('意外的重复初始化 IndexedDB')\n        }\n\n        this.db = null as any\n        this.dbName = ''\n        this.dbVersion = 1\n        this.dbStoreName = ''\n        this.specifyKey = ''\n    }\n\n    static get singleInstance() {\n        if (!this.indexedDBInstance) {\n            this.indexedDBInstance = new IndexedDB(IndexedDBSymbol)\n        }\n\n        return this.indexedDBInstance\n    }\n\n    private getObjectStore(\n        dbStoreName: string,\n        mode: 'readonly' | 'readwrite' | 'versionchange',\n    ) {\n        if (!this.db?.transaction) {\n            sessionStorage.setItem('indexedDB_this', JSON.stringify(this))\n            location.reload()\n            console.info('已尝试刷新页面，查看 session 找错误原因')\n        }\n\n        return this.db?.transaction(dbStoreName, mode)?.objectStore(dbStoreName)\n    }\n\n    // 初始化请求\n    open(options?: {\n        specifyKey?: string // 用来通过此 key 进行 get, delete\n        dbName?: string\n        dbVersion?: number\n        dbStoreName?: string\n    }) {\n        const {\n            specifyKey = 'filepath',\n            dbName = 'yomuaDB',\n            dbVersion = 1,\n            dbStoreName = 'yomua',\n        } = options ?? {}\n\n        this.dbName = dbName\n        this.dbVersion = dbVersion\n        this.dbStoreName = dbStoreName\n        this.specifyKey = specifyKey\n\n        const req = window.indexedDB.open(dbName, dbVersion)\n\n        req.onupgradeneeded = (event: any) => {\n            const store = event?.currentTarget?.result.createObjectStore(\n                dbStoreName,\n                {\n                    keyPath: 'id',\n                    autoIncrement: true,\n                },\n            )\n\n            store.createIndex(this.specifyKey, this.specifyKey, {\n                unique: true,\n            })\n        }\n\n        req.onsuccess = () => {\n            // Better use \"this\" than \"req\" to get the result to avoid problems with garbage collection.\n            // 但是使用 class 方法比较麻烦，这里就直接使用 req.result\n            // db = this.result;\n            this.db = req.result\n\n            // 不能这么做，事务将会在 onsuccess 结束后就被关闭\n            // 参见：https://developer.mozilla.org/zh-CN/docs/Web/API/IndexedDB_API/Using_IndexedDB#%E5%90%91%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E5%A2%9E%E5%8A%A0%E6%95%B0%E6%8D%AE\n            // this.store = this.getObjectStore(this.dbStoreName, 'readwrite')\n        }\n    }\n\n    getDataFromStore(filepath: string) {\n        if (!filepath) return null as any\n\n        const store = this.getObjectStore(this.dbStoreName, 'readonly')\n        const index = store.index(this.specifyKey)\n\n        return index.get(filepath)\n    }\n\n    addDataFromStore(filepath: string, data: Data) {\n        if (!filepath) return null as any\n\n        const store = this.getObjectStore(this.dbStoreName, 'readwrite')\n\n        return store?.add({\n            ...data,\n            filepath,\n        })\n    }\n\n    deleteDataFromStore(filepath: string) {\n        if (!filepath) return null as any\n\n        const store = this.getObjectStore(this.dbStoreName, 'readwrite')\n\n        const req = store.index(this.specifyKey)\n\n        req.get(filepath).onsuccess = (event: any) => {\n            const id = event?.target?.result?.id\n            store?.delete(id)\n        }\n    }\n\n    updateDataFromStore(filepath: string, updateData: string) {\n        if (!filepath) return null as any\n\n        const store = this.getObjectStore(this.dbStoreName, 'readwrite')\n\n        const allRequest = store.getAll()\n\n        allRequest.onsuccess = (event: any) => {\n            const allData = event?.target?.result || []\n\n            const dataToUpdate = allData.find(\n                (value: Data) => value.filepath === filepath,\n            )\n\n            if (!dataToUpdate) {\n                this.addDataFromStore(filepath, { filepath, file: updateData })\n                return\n            }\n\n            store.put({\n                ...dataToUpdate,\n                file: updateData,\n            })\n        }\n    }\n\n    clearDataFromStore() {\n        const store = this.getObjectStore(this.dbStoreName, 'readwrite')\n        store.clear()\n    }\n}\n\nexport default IndexedDB\n","export enum RouteName {\n    Index = '首页',\n    Type = '分类',\n    Mood = '心情',\n    About = '关于',\n}\n\nexport enum RouteLink {\n    Index = 'index',\n    Type = 'type',\n    Mood = 'mood',\n    About = 'about',\n}\n","import { memo } from 'react'\n\nimport classnames from '~/packages/classnames'\n\nimport { useTheme } from '@/hooks'\nimport { Text, Direction } from '@/component'\n\nimport style from './index.less'\n\nconst Footer = () => {\n    const theme = useTheme()\n\n    return (\n        <Direction\n            className={classnames(style.footer, style[`footer-${theme}`])}\n        >\n            <Text>©2021 Created by Yomua</Text>\n        </Direction>\n    )\n}\n\nexport default memo(Footer)\n","import { memo, useCallback } from 'react'\nimport { useHistory } from 'umi'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons'\n\nimport classnames from '~/packages/classnames'\n\nimport { Text, Direction } from '@/component'\nimport { RouteName, RouteLink } from '@/constant'\n\nimport style from './index.less'\nimport { useLocation } from 'umi'\n\ninterface HeaderProps {\n    theme?: Theme\n    onToggleTheme?: (theme: Theme) => void\n}\n\n// const navigationData = [\n//     { id: 'index', label: RouteName.Index, link: RouteLink.Index },\n//     { id: 'type', label: RouteName.Type, link: RouteLink.Type },\n//     { id: 'mood', label: RouteName.Mood, link: RouteLink.Mood },\n//     { id: 'about', label: RouteName.About, link: RouteLink.About },\n// ]\n\nconst Header = (props: HeaderProps) => {\n    const { theme = 'light', onToggleTheme = () => null } = props\n\n    const history = useHistory()\n    const location = useLocation()\n\n    const handleClickTitle = useCallback(() => {\n        history.push(`/${RouteLink.Index}`)\n    }, [])\n\n    const handleToggleTheme = useCallback((theme: Theme) => {\n        return () => {\n            if (theme === 'light') {\n                onToggleTheme('dark')\n                return\n            }\n            onToggleTheme('light')\n        }\n    }, [])\n\n    const handleBack = useCallback(() => {\n        history.goBack()\n    }, [])\n\n    return (\n        <div className={classnames(style.header, style[`header-${theme}`])}>\n            <Direction\n                alignItems='center'\n                justifyContent='space-between'\n                className={style.headerInfo}\n            >\n                <FontAwesomeIcon\n                    className={classnames(style.back, {\n                        [style.hideLeftIcon]:\n                            location.pathname === `/${RouteLink.Index}`,\n                    })}\n                    icon='chevron-left'\n                    onClick={handleBack}\n                />\n                <Text className={style.title} onClick={handleClickTitle}>\n                    青芽\n                </Text>\n\n                <FontAwesomeIcon\n                    className={style.themeIcon}\n                    icon={theme === 'light' ? faSun : faMoon}\n                    onClick={handleToggleTheme(theme)}\n                />\n            </Direction>\n\n            {/* 暂时不需要 Index Type Mood About 这些 */}\n            {/*  <Direction>\n                <Navigation\n                    data={navigationData}\n                    className={style.navigation}\n                />\n            </Direction> */}\n        </div>\n    )\n}\n\nexport default memo(Header)\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Layout } from 'antd'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n    faLinkedin,\n    faTwitterSquare,\n    faYoutubeSquare,\n    faFacebookSquare,\n} from '@fortawesome/free-brands-svg-icons'\n\nimport IndexedDB from '~/packages/indexed-db'\n\nimport style from './index.less'\nimport Footer from './layouts/footer'\nimport { Sidebar } from './component'\nimport Header from './layouts/header'\nimport { ThemeProvider } from './contexts'\n\n// 添加 fontawesome 免费版\nlibrary.add(fas, faFacebookSquare, faYoutubeSquare, faLinkedin, faTwitterSquare)\n\n// 初始化 IndexedDB\nIndexedDB.singleInstance.open({\n    dbName: 'yomuaDB',\n    dbVersion: 1,\n    dbStoreName: 'yomua',\n    specifyKey: 'filepath',\n})\n\nconst Index = (props: { children: React.ReactNode }) => {\n    const [theme, setTheme] = useState<Theme>('light')\n\n    const handleChangeTheme = useCallback((theme: Theme) => {\n        setTheme(theme)\n    }, [])\n\n    useEffect(() => {\n        const html = document.querySelector('html')\n\n        if (!html) {\n            return\n        }\n\n        html.setAttribute('data-theme', theme)\n    }, [theme])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Layout className={style.layout}>\n                <Header theme={theme} onToggleTheme={handleChangeTheme} />\n\n                <Layout.Content className={style.content}>\n                    <Sidebar />\n\n                    {props.children}\n                </Layout.Content>\n\n                <Footer />\n            </Layout>\n        </ThemeProvider>\n    )\n}\n\nexport default Index\n"],"sourceRoot":""}